{
  "$schema": "../schema.json",
  "version": "5.199",
  "title": "VK API JSON Schema - responses",
  "description": "Contains JSON Schema documents explaining the VK.COM API - responses",
  "termsOfService": "https://dev.vk.com/rules",
  "definitions": {
    "friends_addList_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "list_id": {
              "type": "integer",
              "description": "List ID",
              "minimum": 1,
              "required": true
            }
          },
          "required": true
        }
      }
    },
    "friends_add_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Friend request status",
          "enum": [
            1,
            2,
            4
          ],
          "enumNames": [
            "SEND",
            "APPROVED",
            "RESEND"
          ],
          "required": true
        }
      }
    },
    "friends_areFriends_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "../friends/objects.json#/definitions/friends_friend_extended_status"
          },
          "required": true
        }
      }
    },
    "friends_areFriends_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "../friends/objects.json#/definitions/friends_friend_status"
          },
          "required": true
        }
      }
    },
    "friends_delete_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "integer",
              "default": 1,
              "required": true
            },
            "friend_deleted": {
              "type": "integer",
              "description": "Returns 1 if friend has been deleted",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "out_request_deleted": {
              "type": "integer",
              "description": "Returns 1 if out request has been canceled",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "in_request_deleted": {
              "type": "integer",
              "description": "Returns 1 if incoming request has been declined",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "suggestion_deleted": {
              "type": "integer",
              "description": "Returns 1 if suggestion has been declined",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            }
          },
          "maxProperties": 2,
          "required": true
        }
      }
    },
    "friends_getAppUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1,
            "format": "int64",
            "entity": "owner"
          },
          "required": true
        }
      }
    },
    "friends_getByPhones_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "../friends/objects.json#/definitions/friends_user_xtr_phone"
          },
          "required": true
        }
      }
    },
    "friends_getLists_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of friends lists",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "../friends/objects.json#/definitions/friends_friends_list"
              },
              "required": true
            }
          },
          "required": true
        }
      }
    },
    "friends_getMutual_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "entity": "owner",
            "format": "int64",
            "minimum": 1
          },
          "required": true
        }
      }
    },
    "friends_getMutual_target_uids_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "../friends/objects.json#/definitions/friends_mutual_friend"
          },
          "required": true
        }
      }
    },
    "friends_getOnline_online_mobile_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "online": {
              "type": "array",
              "required": true,
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "format": "int64",
                "entity": "owner"
              }
            },
            "online_mobile": {
              "type": "array",
              "required": true,
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "format": "int64",
                "entity": "owner"
              }
            }
          },
          "required": true
        }
      }
    },
    "friends_getOnline_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1,
            "format": "int64",
            "entity": "owner"
          },
          "required": true
        }
      }
    },
    "friends_getRecent_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "entity": "owner",
            "format": "int64",
            "description": "User ID"
          },
          "required": true
        }
      }
    },
    "friends_getRequests_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total requests number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "../friends/objects.json#/definitions/friends_requests_xtr_message"
              },
              "required": true
            },
            "count_unread": {
              "type": "integer",
              "description": "Total unread requests number"
            },
            "last_viewed": {
              "type": "integer",
              "description": "Friend requests last viewed timestamp"
            }
          },
          "required": true
        }
      }
    },
    "friends_getRequests_need_mutual_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total requests number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "../friends/objects.json#/definitions/friends_requests_xtr_mutual"
              },
              "required": true
            },
            "count_unread": {
              "type": "integer",
              "description": "Total unread requests number"
            },
            "last_viewed": {
              "type": "integer",
              "description": "Friend requests last viewed timestamp"
            }
          },
          "required": true
        }
      }
    },
    "friends_getRequests_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total requests number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "entity": "profiles",
                "format": "int64",
                "description": "User ID",
                "minimum": 1
              },
              "required": true
            },
            "count_unread": {
              "type": "integer",
              "description": "Total unread requests number"
            },
            "last_viewed": {
              "type": "integer",
              "description": "Friend requests last viewed timestamp"
            }
          },
          "required": true
        }
      }
    },
    "friends_getSuggestions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total results number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "../users/objects.json#/definitions/users_user_full"
              },
              "required": true
            }
          },
          "required": true
        }
      }
    },
    "friends_get_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total friends number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "../users/objects.json#/definitions/users_user_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "../users/objects.json#/definitions/users_user_full"
              }
            }
          },
          "required": true
        }
      }
    },
    "friends_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total friends number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "entity": "owner",
                "format": "int64"
              },
              "required": true
            }
          },
          "required": true
        }
      }
    },
    "friends_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "../users/objects.json#/definitions/users_user_full"
              },
              "required": true
            }
          },
          "required": true
        }
      }
    }
  }
}
