{
  "$schema": "../schema.json",
  "version": "5.199",
  "title": "VK API JSON Schema - methods",
  "description": "Contains JSON Schema documents explaining the VK.COM API - methods",
  "termsOfService": "https://dev.vk.com/rules",
  "methods": [
    {
      "name": "apps.addUsersToTestingGroup",
      "access_token_type": [
        "service"
      ],
      "parameters": [
        {
          "name": "user_ids",
          "type": "array",
          "required": true,
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "minimum": 1
          }
        },
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "maximum": 25,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../base/responses.json#/definitions/base_bool_response"
        }
      }
    },
    {
      "name": "apps.deleteAppRequests",
      "description": "Deletes all request notifications from the current app.",
      "access_token_type": [
        "user"
      ],
      "responses": {
        "response": {
          "$ref": "../base/responses.json#/definitions/base_ok_response"
        }
      }
    },
    {
      "name": "apps.get",
      "description": "Returns applications data.",
      "access_token_type": [
        "user",
        "service"
      ],
      "parameters": [
        {
          "name": "app_id",
          "description": "Application ID",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        {
          "name": "app_ids",
          "description": "List of application ID",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "maxItems": 100
        },
        {
          "name": "platform",
          "description": "platform. Possible values: *'ios' - iOS,, *'android' - Android,, *'winphone' - Windows Phone,, *'web' - приложения на vk.com. By default: 'web'.",
          "type": "string",
          "default": "web",
          "enum": [
            "android",
            "ios",
            "web"
          ]
        },
        {
          "name": "extended",
          "type": "boolean",
          "default": 0
        },
        {
          "name": "return_friends",
          "type": "boolean",
          "default": 0
        },
        {
          "name": "fields",
          "description": "Profile fields to return. Sample values: 'nickname', 'screen_name', 'sex', 'bdate' (birthdate), 'city', 'country', 'timezone', 'photo', 'photo_medium', 'photo_big', 'has_mobile', 'contacts', 'education', 'online', 'counters', 'relation', 'last_seen', 'activity', 'can_write_private_message', 'can_see_all_posts', 'can_post', 'universities', (only if return_friends - 1)",
          "type": "array",
          "items": {
            "$ref": "../users/objects.json#/definitions/users_fields"
          }
        },
        {
          "name": "name_case",
          "description": "Case for declension of user name and surname: 'nom' - nominative (default),, 'gen' - genitive,, 'dat' - dative,, 'acc' - accusative,, 'ins' - instrumental,, 'abl' - prepositional. (only if 'return_friends' = '1')",
          "type": "string",
          "$ref": "../base/objects.json#/definitions/base_name_case"
        },
        {
          "name": "app_fields",
          "description": "List of app fields to return. Fields 'id', 'type' and 'title' will always be in response. Leave this field empty to get all fields",
          "type": "array",
          "items": {
            "$ref": "../apps/objects.json#/definitions/apps_app_fields"
          }
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_get_response"
        }
      }
    },
    {
      "name": "apps.getCatalog",
      "description": "Returns a list of applications (apps) available to users in the App Catalog.",
      "access_token_type": [
        "user",
        "service"
      ],
      "parameters": [
        {
          "name": "sort",
          "description": "Sort order: 'popular_today' - popular for one day (default), 'visitors' - by visitors number , 'create_date' - by creation date, 'growth_rate' - by growth rate, 'popular_week' - popular for one week",
          "type": "string",
          "enum": [
            "create_date",
            "growth_rate",
            "popular",
            "popular_today",
            "popular_week",
            "visitors"
          ]
        },
        {
          "name": "offset",
          "description": "Offset required to return a specific subset of apps.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "count",
          "description": "Number of apps to return.",
          "type": "integer",
          "default": 100,
          "minimum": 0
        },
        {
          "name": "platform",
          "type": "string"
        },
        {
          "name": "extended",
          "description": "'1' - to return additional fields 'screenshots', 'MAU', 'catalog_position', and 'international'. If set, 'count' must be less than or equal to '100'. '0' - not to return additional fields (default).",
          "type": "boolean"
        },
        {
          "name": "return_friends",
          "type": "boolean"
        },
        {
          "name": "fields",
          "type": "array",
          "items": {
            "$ref": "../users/objects.json#/definitions/users_fields"
          }
        },
        {
          "name": "name_case",
          "type": "string"
        },
        {
          "name": "q",
          "description": "Search query string.",
          "type": "string"
        },
        {
          "name": "genre_id",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "filter",
          "description": "'installed' - to return list of installed apps (only for mobile platform).",
          "type": "string",
          "enum": [
            "favorite",
            "featured",
            "installed",
            "new"
          ]
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getCatalog_response"
        }
      }
    },
    {
      "name": "apps.getFriendsList",
      "description": "Creates friends list for requests and invites in current app.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "extended",
          "type": "boolean",
          "default": 0
        },
        {
          "name": "count",
          "description": "List size.",
          "type": "integer",
          "default": 20,
          "minimum": 0,
          "maximum": 5000
        },
        {
          "name": "offset",
          "type": "integer",
          "default": 0,
          "minimum": 0
        },
        {
          "name": "type",
          "description": "List type. Possible values: * 'invite' - available for invites (don't play the game),, * 'request' - available for request (play the game). By default: 'invite'.",
          "type": "string",
          "default": "invite",
          "enum": [
            "invite",
            "request"
          ]
        },
        {
          "name": "fields",
          "description": "Additional profile fields, see [vk.com/dev/fields|description].",
          "type": "array",
          "default": [
            "photo_200"
          ],
          "items": {
            "$ref": "../users/objects.json#/definitions/users_fields"
          }
        },
        {
          "name": "query",
          "description": "Search query string (e.g., 'Vasya Babich').",
          "type": "string",
          "maxLength": 256
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getFriendsList_response"
        },
        "extendedResponse": {
          "$ref": "../apps/responses.json#/definitions/apps_getFriendsList_extended_response"
        }
      }
    },
    {
      "name": "apps.getLastUploadedVersion",
      "access_token_type": [
        "service"
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_get_last_uploaded_version_response"
        }
      },
      "errors": [
        {
          "$ref": "../errors.json#/errors/api_error_not_found"
        }
      ]
    },
    {
      "name": "apps.getLeaderboard",
      "description": "Returns players rating in the game.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "type",
          "description": "Leaderboard type. Possible values: *'level' - by level,, *'points' - by mission points,, *'score' - by score ().",
          "type": "string",
          "required": true,
          "enum": [
            "level",
            "points",
            "score"
          ]
        },
        {
          "name": "global",
          "description": "Rating type. Possible values: *'1' - global rating among all players,, *'0' - rating among user friends.",
          "type": "boolean",
          "default": true
        },
        {
          "name": "extended",
          "description": "1 - to return additional info about users",
          "type": "boolean",
          "default": false
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getLeaderboard_response"
        },
        "extendedResponse": {
          "$ref": "../apps/responses.json#/definitions/apps_getLeaderboard_extended_response"
        }
      }
    },
    {
      "name": "apps.getMiniAppPolicies",
      "description": "Returns policies and terms given to a mini app.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "app_id",
          "description": "Mini App ID",
          "type": "integer",
          "required": true,
          "minimum": 0
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getMiniAppPolicies_response"
        }
      }
    },
    {
      "name": "apps.getScopes",
      "description": "Returns scopes for auth",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "type",
          "type": "string",
          "default": "user",
          "enum": [
            "group",
            "user"
          ]
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getScopes_response"
        }
      }
    },
    {
      "name": "apps.getScore",
      "description": "Returns user score in app",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "user_id",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getScore_response"
        }
      }
    },
    {
      "name": "apps.getTestingGroups",
      "access_token_type": [
        "service"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 25,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_getTestingGroups_response"
        }
      }
    },
    {
      "name": "apps.isNotificationsAllowed",
      "access_token_type": [
        "user",
        "service"
      ],
      "parameters": [
        {
          "name": "user_id",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_isNotificationsAllowed_response"
        }
      }
    },
    {
      "name": "apps.promoHasActiveGift",
      "access_token_type": [
        "user",
        "service"
      ],
      "parameters": [
        {
          "name": "promo_id",
          "description": "Id of game promo action",
          "type": "integer",
          "required": true,
          "minimum": 0
        },
        {
          "name": "user_id",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../base/responses.json#/definitions/base_bool_response"
        }
      },
      "errors": [
        {
          "$ref": "../errors.json#/errors/api_error_action_failed"
        }
      ]
    },
    {
      "name": "apps.promoUseGift",
      "access_token_type": [
        "user",
        "service"
      ],
      "parameters": [
        {
          "name": "promo_id",
          "description": "Id of game promo action",
          "type": "integer",
          "required": true,
          "minimum": 0
        },
        {
          "name": "user_id",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../base/responses.json#/definitions/base_bool_response"
        }
      },
      "errors": [
        {
          "$ref": "../errors.json#/errors/api_error_action_failed"
        }
      ]
    },
    {
      "name": "apps.removeTestingGroup",
      "access_token_type": [
        "service"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "maximum": 25,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../base/responses.json#/definitions/base_bool_response"
        }
      }
    },
    {
      "name": "apps.removeUsersFromTestingGroups",
      "access_token_type": [
        "service"
      ],
      "parameters": [
        {
          "name": "user_ids",
          "type": "array",
          "required": true,
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner"
          }
        }
      ],
      "responses": {
        "response": {
          "$ref": "../base/responses.json#/definitions/base_bool_response"
        }
      }
    },
    {
      "name": "apps.sendRequest",
      "description": "Sends a request to another user in an app that uses VK authorization.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "user_id",
          "description": "id of the user to send a request",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "text",
          "description": "request text",
          "type": "string"
        },
        {
          "name": "type",
          "description": "request type. Values: 'invite' - if the request is sent to a user who does not have the app installed,, 'request' - if a user has already installed the app",
          "type": "string",
          "default": "request",
          "enum": [
            "invite",
            "request"
          ]
        },
        {
          "name": "name",
          "type": "string",
          "maxLength": 128
        },
        {
          "name": "key",
          "description": "special string key to be sent with the request",
          "type": "string"
        },
        {
          "name": "separate",
          "type": "boolean"
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_sendRequest_response"
        }
      }
    },
    {
      "name": "apps.updateMetaForTestingGroup",
      "access_token_type": [
        "service"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 25,
          "entity": "owner"
        },
        {
          "name": "webview",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "platforms",
          "type": "array",
          "required": true,
          "items": {
            "type": "string",
            "enum": [
              "mobile",
              "web",
              "mvk"
            ]
          }
        },
        {
          "name": "user_ids",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "minimum": 1
          }
        }
      ],
      "responses": {
        "response": {
          "$ref": "../apps/responses.json#/definitions/apps_created_group_response"
        }
      }
    }
  ]
}
