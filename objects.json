{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "objects",
  "definitions": {
    "account_account_counters": {
      "type": "object",
      "properties": {
        "app_requests": {
          "type": "integer",
          "description": "New app requests number",
          "minimum": 1
        },
        "events": {
          "type": "integer",
          "description": "New events number",
          "minimum": 1
        },
        "friends": {
          "type": "integer",
          "description": "New friends requests number",
          "minimum": 1
        },
        "friends_suggestions": {
          "type": "integer",
          "description": "New friends suggestions number",
          "minimum": 1
        },
        "gifts": {
          "type": "integer",
          "description": "New gifts number",
          "minimum": 1
        },
        "groups": {
          "type": "integer",
          "description": "New groups number",
          "minimum": 1
        },
        "messages": {
          "type": "integer",
          "description": "New messages number",
          "minimum": 1
        },
        "notifications": {
          "type": "integer",
          "description": "New notifications number",
          "minimum": 1
        },
        "photos": {
          "type": "integer",
          "description": "New photo tags number",
          "minimum": 1
        },
        "videos": {
          "type": "integer",
          "description": "New video tags number",
          "minimum": 1
        }
      }
    },
    "account_info": {
      "type": "object",
      "properties": {
        "2fa_required": {
          "description": "Two factor authentication is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "country": {
          "type": "string",
          "description": "Country code"
        },
        "https_required": {
          "description": "Information whether HTTPS-only is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "intro": {
          "description": "Information whether user has been processed intro",
          "$ref": "#/definitions/base_bool_int"
        },
        "lang": {
          "type": "integer",
          "description": "Language ID"
        },
        "no_wall_replies": {
          "description": "Information whether wall comments should be hidden",
          "$ref": "#/definitions/base_bool_int"
        },
        "own_posts_default": {
          "description": "Information whether only owners posts should be shown",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "account_name_request": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First name in request"
        },
        "id": {
          "type": "integer",
          "description": "Request ID needed to cancel the request"
        },
        "last_name": {
          "type": "string",
          "description": "Last name in request"
        },
        "status": {
          "$ref": "#/definitions/account_name_request_status"
        },
        "lang": {
          "type": "string"
        }
      }
    },
    "account_name_request_status": {
      "type": "string",
      "description": "Request status",
      "enum": [
        "success",
        "processing",
        "declined",
        "was_accepted",
        "was_declined"
      ]
    },
    "account_offer": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Offer description"
        },
        "id": {
          "type": "integer",
          "description": "Offer ID"
        },
        "img": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "instruction": {
          "type": "string",
          "description": "Instruction how to process the offer"
        },
        "instruction_html": {
          "type": "string",
          "description": "Instruction how to process the offer (HTML format)"
        },
        "price": {
          "type": "integer",
          "description": "Offer price"
        },
        "short_description": {
          "type": "string",
          "description": "Offer short description"
        },
        "tag": {
          "type": "string",
          "description": "Offer tag"
        },
        "title": {
          "type": "string",
          "description": "Offer title"
        }
      },
      "additionalProperties": false
    },
    "account_push_conversations": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Items count"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_conversations_item"
          }
        }
      }
    },
    "account_push_conversations_item": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in seconds"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "sound": {
          "description": "Information whether the sound are enabled",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "peer_id",
        "sound",
        "disabled_until"
      ]
    },
    "account_push_params": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_mode"
          }
        },
        "chat": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_mode"
          }
        },
        "like": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "repost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "comment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "mention": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_settings"
          }
        },
        "reply": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "new_post": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "wall_post": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "wall_publish": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "friend": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "friend_found": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "friend_accepted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "group_invite": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "group_accepted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "birthday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "event_soon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "app_request": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        },
        "sdk_open": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account_push_params_onoff"
          }
        }
      }
    },
    "account_push_params_mode": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "no_sound",
        "no_text"
      ]
    },
    "account_push_params_onoff": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off"
      ]
    },
    "account_push_params_settings": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "fr_of_fr"
      ]
    },
    "account_push_settings": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Information whether notifications are disabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in Unixtime"
        },
        "settings": {
          "$ref": "#/definitions/account_push_params"
        },
        "conversations": {
          "$ref": "#/definitions/account_push_conversations"
        }
      }
    },
    "account_user_settings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "objects.json#/definitions/users_user_min"
        },
        {
          "$ref": "objects.json#/definitions/users_user_settings_xtr"
        }
      ]
    },
    "account_user_settings_interest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "value"
      ]
    },
    "account_user_settings_interests": {
      "type": "object",
      "properties": {
        "activities": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "interests": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "music": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "tv": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "movies": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "books": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "games": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "quotes": {
          "$ref": "#/definitions/account_user_settings_interest"
        },
        "about": {
          "$ref": "#/definitions/account_user_settings_interest"
        }
      }
    },
    "addresses_fields": {
      "type": "string",
      "enum": [
        "id",
        "title",
        "address",
        "additional_address",
        "country_id",
        "city_id",
        "metro_station_id",
        "latitude",
        "longitude",
        "distance",
        "work_info_status",
        "timetable",
        "phone",
        "time_offset"
      ]
    },
    "ads_access_role": {
      "type": "string",
      "description": "Current user's role",
      "enum": [
        "admin",
        "manager",
        "reports"
      ]
    },
    "ads_accesses": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Client ID"
        },
        "role": {
          "$ref": "#/definitions/ads_access_role"
        }
      }
    },
    "ads_account": {
      "type": "object",
      "properties": {
        "access_role": {
          "$ref": "#/definitions/ads_access_role"
        },
        "account_id": {
          "type": "integer",
          "description": "Account ID"
        },
        "account_status": {
          "description": "Information whether account is active",
          "$ref": "#/definitions/base_bool_int"
        },
        "account_type": {
          "$ref": "#/definitions/ads_account_type"
        }
      },
      "required": [
        "account_id",
        "account_type",
        "account_status",
        "access_role"
      ],
      "additionalProperties": false
    },
    "ads_account_type": {
      "type": "string",
      "description": "Account type",
      "enum": [
        "general",
        "agency"
      ]
    },
    "ads_ad": {
      "type": "object",
      "properties": {
        "ad_format": {
          "type": "integer",
          "description": "Ad format"
        },
        "ad_platform": {
          "type": [
            "integer",
            "string"
          ],
          "description": "Ad platform"
        },
        "all_limit": {
          "type": "integer",
          "description": "Total limit"
        },
        "approved": {
          "$ref": "#/definitions/ads_ad_approved"
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID"
        },
        "category1_id": {
          "type": "integer",
          "description": "Category ID"
        },
        "category2_id": {
          "type": "integer",
          "description": "Additional category ID"
        },
        "cost_type": {
          "$ref": "#/definitions/ads_ad_cost_type"
        },
        "cpc": {
          "type": "integer",
          "description": "Cost of a click, kopecks"
        },
        "cpm": {
          "type": "integer",
          "description": "Cost of 1000 impressions, kopecks"
        },
        "cpa": {
          "type": "integer",
          "description": "Cost of an action, kopecks"
        },
        "disclaimer_medical": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disclaimer_specialist": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "disclaimer_supplements": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Ad ID"
        },
        "impressions_limit": {
          "type": "integer",
          "description": "Impressions limit"
        },
        "impressions_limited": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether impressions are limited"
        },
        "name": {
          "type": "string",
          "description": "Ad title"
        },
        "status": {
          "$ref": "#/definitions/ads_ad_status"
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "campaign_id",
        "ad_format",
        "cost_type",
        "all_limit",
        "status",
        "name",
        "approved"
      ],
      "additionalProperties": false
    },
    "ads_ad_approved": {
      "type": "integer",
      "description": "Review status",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not moderated",
        "pending moderation",
        "approved",
        "rejected"
      ]
    },
    "ads_ad_cost_type": {
      "type": "integer",
      "description": "Cost type",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "per clicks",
        "per impressions",
        "per actions"
      ]
    },
    "ads_ad_layout": {
      "type": "object",
      "properties": {
        "ad_format": {
          "type": "integer",
          "description": "Ad format"
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID"
        },
        "cost_type": {
          "$ref": "#/definitions/ads_ad_cost_type"
        },
        "description": {
          "type": "string",
          "description": "Ad description"
        },
        "id": {
          "type": "integer",
          "description": "Ad ID"
        },
        "image_src": {
          "type": "string",
          "format": "uri",
          "description": "Image URL"
        },
        "image_src_2x": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image in double size"
        },
        "link_domain": {
          "type": "string",
          "description": "Domain of advertised object"
        },
        "link_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of advertised object"
        },
        "preview_link": {
          "type": [
            "integer",
            "string"
          ],
          "description": "link to preview an ad as it is shown on the website"
        },
        "title": {
          "type": "string",
          "description": "Ad title"
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "campaign_id",
        "ad_format",
        "cost_type",
        "title",
        "description",
        "link_url",
        "image_src"
      ],
      "additionalProperties": false
    },
    "ads_ad_status": {
      "type": "integer",
      "description": "Ad atatus",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign": {
      "type": "object",
      "properties": {
        "all_limit": {
          "type": "string",
          "description": "Campaign's total limit, rubles"
        },
        "day_limit": {
          "type": "string",
          "description": "Campaign's day limit, rubles"
        },
        "id": {
          "type": "integer",
          "description": "Campaign ID"
        },
        "name": {
          "type": "string",
          "description": "Campaign title"
        },
        "start_time": {
          "type": "integer",
          "description": "Campaign start time, as Unixtime"
        },
        "status": {
          "$ref": "#/definitions/ads_campaign_status"
        },
        "stop_time": {
          "type": "integer",
          "description": "Campaign stop time, as Unixtime"
        },
        "type": {
          "$ref": "#/definitions/ads_campaign_type"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status",
        "day_limit",
        "all_limit",
        "start_time",
        "stop_time"
      ],
      "additionalProperties": false
    },
    "ads_campaign_status": {
      "type": "integer",
      "description": "Campaign status",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign_type": {
      "type": "string",
      "description": "Campaign type",
      "enum": [
        "normal",
        "vk_apps_managed",
        "mobile_apps",
        "promoted_posts"
      ]
    },
    "ads_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_object_with_name"
          }
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "ads_client": {
      "type": "object",
      "properties": {
        "all_limit": {
          "type": "string",
          "description": "Client's total limit, rubles"
        },
        "day_limit": {
          "type": "string",
          "description": "Client's day limit, rubles"
        },
        "id": {
          "type": "integer",
          "description": "Client ID"
        },
        "name": {
          "type": "string",
          "description": "Client name"
        }
      },
      "required": [
        "id",
        "name",
        "day_limit",
        "all_limit"
      ],
      "additionalProperties": false
    },
    "ads_criteria": {
      "type": "object",
      "properties": {
        "age_from": {
          "type": "integer",
          "description": "Age from",
          "minimum": 0
        },
        "age_to": {
          "type": "integer",
          "description": "Age to",
          "minimum": 0
        },
        "apps": {
          "type": "string",
          "description": "Apps IDs"
        },
        "apps_not": {
          "type": "string",
          "description": "Apps IDs to except"
        },
        "birthday": {
          "type": "integer",
          "description": "Days to birthday"
        },
        "cities": {
          "type": "string",
          "description": "Cities IDs"
        },
        "cities_not": {
          "type": "string",
          "description": "Cities IDs to except"
        },
        "country": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 0
        },
        "districts": {
          "type": "string",
          "description": "Districts IDs"
        },
        "groups": {
          "type": "string",
          "description": "Communities IDs"
        },
        "interest_categories": {
          "type": "string",
          "description": "Interests categories IDs"
        },
        "interests": {
          "type": "string",
          "description": "Interests"
        },
        "paying": {
          "description": "Information whether the user has proceeded VK payments before",
          "$ref": "#/definitions/base_bool_int"
        },
        "positions": {
          "type": "string",
          "description": "Positions IDs"
        },
        "religions": {
          "type": "string",
          "description": "Religions IDs"
        },
        "retargeting_groups": {
          "type": "string",
          "description": "Retargeting groups IDs"
        },
        "retargeting_groups_not": {
          "type": "string",
          "description": "Retargeting groups IDs to except"
        },
        "school_from": {
          "type": "integer",
          "description": "School graduation year from"
        },
        "school_to": {
          "type": "integer",
          "description": "School graduation year to"
        },
        "schools": {
          "type": "string",
          "description": "Schools IDs"
        },
        "sex": {
          "$ref": "#/definitions/ads_criteria_sex"
        },
        "stations": {
          "type": "string",
          "description": "Stations IDs"
        },
        "statuses": {
          "type": "string",
          "description": "Relationship statuses"
        },
        "streets": {
          "type": "string",
          "description": "Streets IDs"
        },
        "travellers": {
          "description": "Travellers only",
          "$ref": "#/definitions/base_property_exists"
        },
        "uni_from": {
          "type": "integer",
          "description": "University graduation year from"
        },
        "uni_to": {
          "type": "integer",
          "description": "University graduation year to"
        },
        "user_browsers": {
          "type": "string",
          "description": "Browsers"
        },
        "user_devices": {
          "type": "string",
          "description": "Devices"
        },
        "user_os": {
          "type": "string",
          "description": "Operating systems"
        }
      },
      "additionalProperties": false
    },
    "ads_criteria_sex": {
      "type": "integer",
      "description": "Sex",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "any",
        "male",
        "female"
      ]
    },
    "ads_demo_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "stats": {
          "$ref": "#/definitions/ads_demostats_format"
        },
        "type": {
          "$ref": "#/definitions/ads_object_type"
        }
      },
      "additionalProperties": false
    },
    "ads_demostats_format": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_cities"
          }
        },
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_sex"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_flood_stats": {
      "type": "object",
      "properties": {
        "left": {
          "type": "integer",
          "description": "Requests left"
        },
        "refresh": {
          "type": "integer",
          "description": "Time to refresh in seconds"
        }
      },
      "required": [
        "left",
        "refresh"
      ],
      "additionalProperties": false
    },
    "ads_link_status": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Reject reason"
        },
        "redirect_url": {
          "type": "string",
          "format": "uri",
          "description": "URL"
        },
        "status": {
          "type": "string",
          "description": "Link status"
        }
      },
      "required": [
        "status",
        "description",
        "redirect_url"
      ],
      "additionalProperties": false
    },
    "ads_object_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "ad",
        "campaign",
        "client",
        "office"
      ]
    },
    "ads_paragraphs": {
      "type": "object",
      "properties": {
        "paragraph": {
          "type": "string",
          "description": "Rules paragraph"
        }
      }
    },
    "ads_promoted_post_reach": {
      "type": "object",
      "properties": {
        "hide": {
          "type": "integer",
          "description": "Hides amount"
        },
        "id": {
          "type": "integer",
          "description": "Object ID from 'ids' parameter"
        },
        "join_group": {
          "type": "integer",
          "description": "Community joins"
        },
        "links": {
          "type": "integer",
          "description": "Link clicks"
        },
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach"
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach"
        },
        "report": {
          "type": "integer",
          "description": "Reports amount"
        },
        "to_group": {
          "type": "integer",
          "description": "Community clicks"
        },
        "unsubscribe": {
          "type": "integer",
          "description": "'Unsubscribe' events amount"
        },
        "video_views_100p": {
          "type": "integer",
          "description": "Video views for 100 percent"
        },
        "video_views_25p": {
          "type": "integer",
          "description": "Video views for 25 percent"
        },
        "video_views_3s": {
          "type": "integer",
          "description": "Video views for 3 seconds"
        },
        "video_views_50p": {
          "type": "integer",
          "description": "Video views for 50 percent"
        },
        "video_views_75p": {
          "type": "integer",
          "description": "Video views for 75 percent"
        },
        "video_views_start": {
          "type": "integer",
          "description": "Video starts"
        }
      },
      "required": [
        "id",
        "reach_subscribers",
        "reach_total",
        "links",
        "to_group",
        "join_group",
        "report",
        "hide",
        "unsubscribe"
      ],
      "additionalProperties": false
    },
    "ads_reject_reason": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment text"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_rules"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_rules": {
      "type": "object",
      "properties": {
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_paragraphs"
          }
        },
        "title": {
          "type": "string",
          "description": "Comment"
        }
      }
    },
    "ads_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "stats": {
          "$ref": "#/definitions/ads_stats_format"
        },
        "type": {
          "$ref": "#/definitions/ads_object_type"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_age": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "value": {
          "type": "string",
          "description": "Age interval"
        }
      }
    },
    "ads_stats_cities": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "name": {
          "type": "string",
          "description": "City name"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        }
      }
    },
    "ads_stats_format": {
      "type": "object",
      "properties": {
        "clicks": {
          "type": "integer",
          "description": "Clicks number"
        },
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "join_rate": {
          "type": "integer",
          "description": "Events number"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "reach": {
          "type": "integer",
          "description": "Reach "
        },
        "spent": {
          "type": "integer",
          "description": "Spent funds"
        },
        "video_clicks_site": {
          "type": "integer",
          "description": "Clickthoughs to the advertised site"
        },
        "video_views": {
          "type": "integer",
          "description": "Video views number"
        },
        "video_views_full": {
          "type": "integer",
          "description": "Video views (full video)"
        },
        "video_views_half": {
          "type": "integer",
          "description": "Video views (half of video)"
        }
      }
    },
    "ads_stats_sex": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "value": {
          "$ref": "#/definitions/ads_stats_sex_value"
        }
      }
    },
    "ads_stats_sex_age": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "value": {
          "type": "string",
          "description": "Sex and age interval"
        }
      }
    },
    "ads_stats_sex_value": {
      "type": "string",
      "description": "Sex",
      "enum": [
        "f",
        "m"
      ],
      "enumNames": [
        "female",
        "male"
      ]
    },
    "ads_targ_settings": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "Ad ID"
            },
            "campaign_id": {
              "type": "integer",
              "description": "Campaign ID"
            }
          }
        },
        {
          "$ref": "#/definitions/ads_criteria"
        }
      ]
    },
    "ads_targ_stats": {
      "type": "object",
      "properties": {
        "audience_count": {
          "type": "integer",
          "description": "Audience"
        },
        "recommended_cpc": {
          "type": "number",
          "description": "Recommended CPC value"
        },
        "recommended_cpm": {
          "type": "number",
          "description": "Recommended CPM value"
        }
      },
      "required": [
        "audience_count"
      ],
      "additionalProperties": false
    },
    "ads_targ_suggestions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_cities": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "parent": {
          "type": "string",
          "description": "Parent object"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_regions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "type": {
          "type": "string",
          "description": "Object type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string",
          "description": "Full school title"
        },
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School title"
        },
        "parent": {
          "type": "string",
          "description": "City name"
        },
        "type": {
          "$ref": "#/definitions/ads_targ_suggestions_schools_type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools_type": {
      "type": "string",
      "description": "School type",
      "enum": [
        "school",
        "university",
        "faculty",
        "chair"
      ]
    },
    "ads_target_group": {
      "type": "object",
      "properties": {
        "audience_count": {
          "type": "integer",
          "description": "Audience"
        },
        "domain": {
          "type": "string",
          "description": "Site domain"
        },
        "id": {
          "type": "integer",
          "description": "Group ID"
        },
        "lifetime": {
          "type": "integer",
          "description": "Number of days for user to be in group"
        },
        "name": {
          "type": "string",
          "description": "Group name"
        },
        "pixel": {
          "type": "string",
          "description": "Pixel code"
        }
      },
      "additionalProperties": false
    },
    "ads_users": {
      "type": "object",
      "properties": {
        "accesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ads_accesses"
          }
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "required": [
        "user_id",
        "accesses"
      ],
      "additionalProperties": false
    },
    "apps_app": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/apps_app_min"
        },
        {
          "properties": {
            "author_group": {
              "type": "integer",
              "description": "Official community's ID"
            },
            "author_url": {
              "type": "string",
              "format": "uri",
              "description": "Application author's URL"
            },
            "banner_1120": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app banner with 1120 px in width"
            },
            "banner_560": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app banner with 560 px in width"
            },
            "friends": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0
              }
            },
            "catalog_position": {
              "type": "integer",
              "description": "Catalog position"
            },
            "description": {
              "type": "string",
              "description": "Application description"
            },
            "genre": {
              "type": "string",
              "description": "Genre name"
            },
            "genre_id": {
              "type": "integer",
              "description": "Genre ID"
            },
            "international": {
              "type": "integer",
              "description": "Information whether the application is multilanguage"
            },
            "is_in_catalog": {
              "type": "integer",
              "description": "Information whether application is in mobile catalog"
            },
            "leaderboard_type": {
              "$ref": "#/definitions/apps_app_leaderboard_type"
            },
            "members_count": {
              "type": "integer",
              "description": "Members number"
            },
            "platform_id": {
              "type": "integer",
              "description": "Application ID in store"
            },
            "published_date": {
              "type": "integer",
              "description": "Date when the application has been published in Unixtime"
            },
            "screen_name": {
              "type": "string",
              "description": "Screen name"
            },
            "screenshots": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/photos_photo"
              }
            },
            "section": {
              "type": "string",
              "description": "Application section name"
            }
          }
        }
      ]
    },
    "apps_app_leaderboard_type": {
      "type": "integer",
      "description": "Leaderboard type",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "not supported",
        "levels",
        "points"
      ]
    },
    "apps_app_min": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apps_app_type"
        },
        "id": {
          "type": "integer",
          "description": "Application ID",
          "minimum": 0
        },
        "title": {
          "type": "string",
          "description": "Application title"
        },
        "author_id": {
          "type": "integer",
          "description": "Application author's ID"
        },
        "icon_139": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 139 px in width"
        },
        "icon_150": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 150 px in width"
        },
        "icon_278": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 278 px in width"
        },
        "icon_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 75 px in width"
        }
      },
      "required": [
        "id",
        "title",
        "type"
      ]
    },
    "apps_app_type": {
      "type": "string",
      "description": "Application type",
      "enum": [
        "app",
        "game",
        "site",
        "standalone",
        "vk_app",
        "community_app",
        "html5_game"
      ]
    },
    "apps_leaderboard": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "points": {
          "type": "integer",
          "description": "Points number"
        },
        "score": {
          "type": "integer",
          "description": "Score number"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "required": [
        "user_id"
      ]
    },
    "apps_scope": {
      "type": "object",
      "description": "Scope description",
      "properties": {
        "name": {
          "type": "string",
          "description": "Scope name"
        },
        "title": {
          "type": "string",
          "description": "Scope title"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "audio_audio": {
      "type": "object",
      "properties": {
        "artist": {
          "type": "string",
          "description": "Artist name"
        },
        "id": {
          "type": "integer",
          "description": "Audio ID",
          "minimum": 0
        },
        "title": {
          "type": "string",
          "description": "Title"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of mp3 file"
        },
        "duration": {
          "type": "integer",
          "description": "Duration in seconds",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "minimum": 0
        },
        "genre_id": {
          "type": "integer",
          "description": "Genre ID",
          "minimum": 0
        },
        "performer": {
          "type": "string",
          "description": "Performer name"
        }
      },
      "required": [
        "id",
        "owner_id",
        "duration",
        "artist",
        "title"
      ],
      "additionalProperties": false
    },
    "base_bool_int": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "no",
        "yes"
      ]
    },
    "base_city": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "City title"
        }
      },
      "required": [
        "id",
        "title"
      ]
    },
    "base_comments_info": {
      "type": "object",
      "properties": {
        "can_post": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "groups_can_post": {
          "type": "boolean",
          "description": "Information whether groups can comment the post"
        }
      }
    },
    "base_country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "Country title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "base_error": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "integer",
          "description": "Error code"
        },
        "error_msg": {
          "type": "string",
          "description": "Error message"
        },
        "request_params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_request_param"
          }
        }
      },
      "withoutRefs": true
    },
    "base_geo": {
      "type": "object",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/base_geo_coordinates"
        },
        "place": {
          "$ref": "#/definitions/base_place"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      }
    },
    "base_geo_coordinates": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "additionalProperties": false
    },
    "base_image": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Image height",
          "minimum": 0
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Image url"
        },
        "width": {
          "type": "integer",
          "description": "Image width",
          "minimum": 0
        }
      },
      "required": [
        "url",
        "width",
        "height"
      ],
      "additionalProperties": false
    },
    "base_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "user_likes": {
          "description": "Information whether current user likes the photo",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "base_likes_info": {
      "type": "object",
      "properties": {
        "can_like": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can like the post"
        },
        "can_publish": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can repost"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "user_likes": {
          "type": "integer",
          "description": "Information whether current uer has liked the post"
        }
      },
      "required": [
        "count",
        "user_likes",
        "can_like"
      ],
      "additionalProperties": false
    },
    "base_link": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/base_link_application"
        },
        "button": {
          "$ref": "#/definitions/base_link_button"
        },
        "caption": {
          "type": "string",
          "description": "Link caption"
        },
        "description": {
          "type": "string",
          "description": "Link description"
        },
        "id": {
          "type": "string",
          "description": "Link ID"
        },
        "is_favorite": {
          "type": "boolean"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "preview_page": {
          "type": "string",
          "description": "String ID of the page with article preview"
        },
        "preview_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with article preview"
        },
        "product": {
          "$ref": "#/definitions/base_link_product"
        },
        "rating": {
          "$ref": "#/definitions/base_link_rating"
        },
        "title": {
          "type": "string",
          "description": "Link title"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        }
      },
      "required": [
        "url"
      ],
      "additionalProperties": false
    },
    "base_link_application": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "number",
          "description": "Application Id"
        },
        "store": {
          "$ref": "#/definitions/base_link_application_store"
        }
      },
      "additionalProperties": false
    },
    "base_link_application_store": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Store Id"
        },
        "name": {
          "type": "string",
          "description": "Store name"
        }
      },
      "additionalProperties": false
    },
    "base_link_button": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/base_link_button_action",
          "description": "Button action"
        },
        "title": {
          "type": "string",
          "description": "Button title"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/base_link_button_action_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Action URL"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action_type": {
      "type": "string",
      "description": "Action type",
      "enum": [
        "open_url"
      ],
      "enumNames": [
        "open_url"
      ]
    },
    "base_link_product": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/market_price"
        },
        "merchant": {
          "type": "string"
        },
        "orders_count": {
          "type": "integer"
        }
      },
      "required": [
        "price"
      ],
      "additionalProperties": false
    },
    "base_link_rating": {
      "type": "object",
      "properties": {
        "reviews_count": {
          "type": "integer",
          "description": "Count of reviews"
        },
        "stars": {
          "type": "number",
          "description": "Count of stars"
        }
      },
      "additionalProperties": false
    },
    "base_message_error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "Error code"
        },
        "description": {
          "type": "string",
          "description": "Error message"
        }
      },
      "withoutRefs": true
    },
    "base_object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "title": {
          "type": "string",
          "description": "Object title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "base_object_count": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Items count"
        }
      }
    },
    "base_object_with_name": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "base_ok_response": {
      "type": "integer",
      "description": "Returns 1 if request has been processed successfully",
      "enum": [
        1
      ],
      "enumNames": [
        "ok"
      ]
    },
    "base_place": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Place address"
        },
        "checkins": {
          "type": "integer",
          "description": "Checkins number"
        },
        "city": {
          "type": "string",
          "description": "City name"
        },
        "country": {
          "type": "string",
          "description": "Country name"
        },
        "created": {
          "type": "integer",
          "description": "Date of the place creation in Unixtime"
        },
        "icon": {
          "type": "string",
          "format": "uri",
          "description": "URL of the place's icon"
        },
        "id": {
          "type": "integer",
          "description": "Place ID"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "title": {
          "type": "string",
          "description": "Place title"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      }
    },
    "base_property_exists": {
      "type": "integer",
      "enum": [
        1
      ],
      "enumNames": [
        "Property exists"
      ]
    },
    "base_reposts_info": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Reposts number"
        },
        "user_reposted": {
          "type": "integer",
          "description": "Information whether current user has reposted the post"
        }
      }
    },
    "base_request_param": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Parameter name"
        },
        "value": {
          "type": "string",
          "description": "Parameter value"
        }
      }
    },
    "base_sex": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "unknown",
        "female",
        "male"
      ]
    },
    "base_sticker": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        },
        "images_with_background": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        },
        "product_id": {
          "type": "integer",
          "description": "Collection ID"
        },
        "sticker_id": {
          "type": "integer",
          "description": "Sticker ID"
        }
      },
      "additionalProperties": false
    },
    "base_upload_server": {
      "type": "object",
      "properties": {
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "Upload URL"
        }
      },
      "required": [
        "upload_url"
      ],
      "additionalProperties": false
    },
    "base_user_group_fields": {
      "type": "string",
      "enum": [
        "about",
        "action_button",
        "activities",
        "activity",
        "addresses",
        "admin_level",
        "age_limits",
        "author_id",
        "ban_info",
        "bdate",
        "blacklisted",
        "blacklisted_by_me",
        "books",
        "can_create_topic",
        "can_message",
        "can_post",
        "can_see_all_posts",
        "can_see_audio",
        "can_send_friend_request",
        "can_upload_video",
        "can_write_private_message",
        "career",
        "city",
        "common_count",
        "connections",
        "contacts",
        "counters",
        "country",
        "cover",
        "crop_photo",
        "deactivated",
        "description",
        "domain",
        "education",
        "exports",
        "finish_date",
        "fixed_post",
        "followers_count",
        "friend_status",
        "games",
        "has_market_app",
        "has_mobile",
        "has_photo",
        "home_town",
        "id",
        "interests",
        "is_admin",
        "is_closed",
        "is_favorite",
        "is_friend",
        "is_hidden_from_feed",
        "is_member",
        "is_messages_blocked",
        "can_send_notify",
        "is_subscribed",
        "last_seen",
        "links",
        "lists",
        "maiden_name",
        "main_album_id",
        "main_section",
        "market",
        "member_status",
        "members_count",
        "military",
        "movies",
        "music",
        "name",
        "nickname",
        "occupation",
        "online",
        "online_status",
        "personal",
        "phone",
        "photo_100",
        "photo_200",
        "photo_200_orig",
        "photo_400_orig",
        "photo_50",
        "photo_id",
        "photo_max",
        "photo_max_orig",
        "quotes",
        "relation",
        "relatives",
        "schools",
        "screen_name",
        "sex",
        "site",
        "start_date",
        "status",
        "timezone",
        "trending",
        "tv",
        "type",
        "universities",
        "verified",
        "wall_comments",
        "wiki_page",
        "vk_admin_status"
      ]
    },
    "base_user_id": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      }
    },
    "board_default_order": {
      "type": "integer",
      "description": "Sort type",
      "enum": [
        1,
        2,
        -1,
        -2
      ],
      "enumNames": [
        "desc_updated",
        "desc_created",
        "asc_updated",
        "asc_created"
      ]
    },
    "board_topic": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments number"
        },
        "created": {
          "type": "integer",
          "description": "Date when the topic has been created in Unixtime"
        },
        "created_by": {
          "type": "integer",
          "description": "Creator ID"
        },
        "id": {
          "type": "integer",
          "description": "Topic ID"
        },
        "is_closed": {
          "description": "Information whether the topic is closed",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_fixed": {
          "description": "Information whether the topic is fixed",
          "$ref": "#/definitions/base_bool_int"
        },
        "title": {
          "type": "string",
          "description": "Topic title"
        },
        "updated": {
          "type": "integer",
          "description": "Date when the topic has been updated in Unixtime"
        },
        "updated_by": {
          "type": "integer",
          "description": "ID of user who updated the topic"
        }
      }
    },
    "board_topic_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text"
      ],
      "additionalProperties": false
    },
    "board_topic_poll": {
      "type": "object",
      "properties": {
        "answer_id": {
          "type": "integer",
          "description": "Current user's answer ID",
          "minimum": 0
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/polls_answer"
          }
        },
        "created": {
          "type": "integer",
          "description": "Date when poll has been created in Unixtime",
          "minimum": 0
        },
        "is_closed": {
          "description": "Information whether the poll is closed",
          "$ref": "#/definitions/base_bool_int"
        },
        "owner_id": {
          "type": "integer",
          "description": "Poll owner's ID"
        },
        "poll_id": {
          "type": "integer",
          "description": "Poll ID",
          "minimum": 1
        },
        "question": {
          "type": "string",
          "description": "Poll question"
        },
        "votes": {
          "type": "string",
          "description": "Votes number",
          "minimum": 0
        }
      },
      "required": [
        "poll_id",
        "owner_id",
        "created",
        "question",
        "votes",
        "answer_id",
        "answers"
      ],
      "additionalProperties": false
    },
    "callback_board_post_delete": {
      "type": "object",
      "properties": {
        "topic_owner_id": {
          "type": "integer",
          "minimum": 0
        },
        "topic_id": {
          "type": "integer",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "topic_owner_id",
        "topic_id",
        "id"
      ],
      "withoutRefs": true
    },
    "callback_confirmation_message": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/callback_message_type"
        },
        "group_id": {
          "type": "integer"
        },
        "secret": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "group_id",
        "secret"
      ],
      "withoutRefs": true
    },
    "callback_group_change_photo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        }
      },
      "required": [
        "user_id",
        "photo"
      ],
      "withoutRefs": true
    },
    "callback_group_change_settings": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "self": {
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "user_id",
        "self"
      ],
      "withoutRefs": true
    },
    "callback_group_join": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "join_type": {
          "$ref": "objects.json#/definitions/callback_group_join_type"
        }
      },
      "required": [
        "user_id",
        "join_type"
      ],
      "withoutRefs": true
    },
    "callback_group_join_type": {
      "type": "string",
      "enum": [
        "join",
        "unsure",
        "accepted",
        "approved",
        "request"
      ],
      "withoutRefs": true
    },
    "callback_group_leave": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "self": {
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "withoutRefs": true
    },
    "callback_group_market": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "disabled",
        "open"
      ],
      "withoutRefs": true
    },
    "callback_group_officer_role": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "none",
        "moderator",
        "editor",
        "administrator"
      ],
      "withoutRefs": true
    },
    "callback_group_officers_edit": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "level_old": {
          "$ref": "objects.json#/definitions/callback_group_officer_role"
        },
        "level_new": {
          "$ref": "objects.json#/definitions/callback_group_officer_role"
        }
      },
      "required": [
        "admin_id",
        "user_id",
        "level_old",
        "level_new"
      ],
      "withoutRefs": true
    },
    "callback_group_settings_changes": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "access": {
          "$ref": "#/definitions/groups_group_is_closed"
        },
        "screen_name": {
          "type": "string"
        },
        "public_category": {
          "type": "integer"
        },
        "public_subcategory": {
          "type": "integer"
        },
        "age_limits": {
          "$ref": "#/definitions/groups_group_full_age_limits"
        },
        "website": {
          "type": "string"
        },
        "enable_status_default": {
          "$ref": "objects.json#/definitions/groups_group_wall"
        },
        "enable_audio": {
          "$ref": "objects.json#/definitions/groups_group_audio"
        },
        "enable_video": {
          "$ref": "objects.json#/definitions/groups_group_video"
        },
        "enable_photo": {
          "$ref": "objects.json#/definitions/groups_group_photos"
        },
        "enable_market": {
          "$ref": "objects.json#/definitions/callback_group_market"
        }
      },
      "withoutRefs": true
    },
    "callback_market_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "from_id": {
          "type": "integer"
        },
        "date": {
          "type": "integer",
          "minimum": 0
        },
        "text": {
          "type": "string"
        },
        "market_owner_od": {
          "type": "integer"
        },
        "photo_id": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "from_id",
        "date"
      ],
      "withoutRefs": true
    },
    "callback_market_comment_delete": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "item_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "owner_id",
        "id",
        "user_id",
        "item_id"
      ],
      "withoutRefs": true
    },
    "callback_message_allow": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "user_id",
        "key"
      ],
      "withoutRefs": true
    },
    "callback_message_base": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "objects.json#/definitions/callback_message_type"
        },
        "object": {
          "type": "object"
        },
        "group_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "type",
        "object",
        "group_id"
      ],
      "withoutRefs": true
    },
    "callback_message_deny": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "user_id"
      ],
      "withoutRefs": true
    },
    "callback_message_type": {
      "type": "string",
      "enum": [
        "confirmation",
        "group_change_photo",
        "group_change_settings",
        "group_officers_edit",
        "lead_forms_new",
        "market_comment_delete",
        "market_comment_edit",
        "market_comment_restore",
        "message_allow",
        "message_deny",
        "message_read",
        "message_reply",
        "message_typing_state",
        "messages_edit",
        "photo_comment_delete",
        "photo_comment_edit",
        "photo_comment_restore",
        "poll_vote_new",
        "user_block",
        "user_unblock",
        "video_comment_delete",
        "video_comment_edit",
        "video_comment_restore",
        "wall_reply_delete",
        "wall_reply_restore",
        "wall_repost"
      ],
      "withoutRefs": true
    },
    "callback_photo_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "from_id": {
          "type": "integer",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "minimum": 0
        },
        "text": {
          "type": "string"
        },
        "photo_owner_od": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text",
        "photo_owner_od"
      ],
      "withoutRefs": true
    },
    "callback_photo_comment_delete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "owner_id": {
          "type": "integer",
          "minimum": 0
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "photo_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "user_id",
        "photo_id"
      ],
      "withoutRefs": true
    },
    "callback_poll_vote_new": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer"
        },
        "poll_id": {
          "type": "integer",
          "minimum": 0
        },
        "option_id": {
          "type": "integer",
          "minimum": 0
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "owner_id",
        "poll_id",
        "option_id",
        "user_id"
      ],
      "withoutRefs": true
    },
    "callback_user_block": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "unblock_date": {
          "type": "integer",
          "minimum": 0
        },
        "reason": {
          "type": "integer",
          "minimum": 0
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "admin_id",
        "user_id",
        "unblock_date",
        "reason"
      ],
      "withoutRefs": true
    },
    "callback_user_unblock": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "by_end_date": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "admin_id",
        "user_id",
        "by_end_date"
      ],
      "withoutRefs": true
    },
    "callback_video_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "from_id": {
          "type": "integer"
        },
        "date": {
          "type": "integer",
          "minimum": 0
        },
        "text": {
          "type": "string"
        },
        "video_owner_od": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text",
        "video_owner_od"
      ],
      "withoutRefs": true
    },
    "callback_video_comment_delete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "owner_id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "video_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "user_id",
        "video_id"
      ],
      "withoutRefs": true
    },
    "callback_wall_comment_delete": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "user_id": {
          "type": "integer",
          "minimum": 0
        },
        "post_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "owner_id",
        "id",
        "user_id",
        "post_id"
      ],
      "withoutRefs": true
    },
    "comment_thread": {
      "type": "object",
      "properties": {
        "can_post": {
          "type": "boolean",
          "description": "Information whether current user can comment the post"
        },
        "count": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0
        },
        "groups_can_post": {
          "type": "boolean",
          "description": "Information whether groups can comment the post"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "objects.json#/definitions/wall_wall_comment"
          }
        },
        "show_reply_button": {
          "type": "boolean",
          "description": "Information whether recommended to display reply button"
        }
      },
      "required": [
        "count"
      ]
    },
    "database_city": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base_object"
        },
        {
          "properties": {
            "area": {
              "type": "string",
              "description": "Area title"
            },
            "region": {
              "type": "string",
              "description": "Region title"
            },
            "important": {
              "description": "Information whether the city is included in important cities list",
              "$ref": "#/definitions/base_bool_int"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "database_faculty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "title": {
          "type": "string",
          "description": "Faculty title"
        }
      }
    },
    "database_region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Region ID"
        },
        "title": {
          "type": "string",
          "description": "Region title"
        }
      }
    },
    "database_school": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "title": {
          "type": "string",
          "description": "School title"
        }
      }
    },
    "database_station": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1
        },
        "color": {
          "type": "string",
          "description": "Hex color code without #"
        },
        "id": {
          "type": "integer",
          "description": "Station ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Station name"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "database_university": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "title": {
          "type": "string",
          "description": "University title"
        }
      }
    },
    "docs_doc": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the document"
        },
        "date": {
          "type": "integer",
          "description": "Date when file has been uploaded in Unixtime",
          "minimum": 0
        },
        "ext": {
          "type": "string",
          "description": "File extension"
        },
        "id": {
          "type": "integer",
          "description": "Document ID",
          "minimum": 0
        },
        "is_licensed": {
          "$ref": "#/definitions/base_bool_int"
        },
        "owner_id": {
          "type": "integer",
          "description": "Document owner ID"
        },
        "preview": {
          "$ref": "#/definitions/docs_doc_preview"
        },
        "size": {
          "type": "integer",
          "description": "File size in bites",
          "minimum": 0
        },
        "title": {
          "type": "string",
          "description": "Document title"
        },
        "type": {
          "type": "integer",
          "description": "Document type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "File URL"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "size",
        "ext",
        "date",
        "type"
      ],
      "additionalProperties": false
    },
    "docs_doc_attachment_type": {
      "type": "string",
      "description": "Doc attachment type",
      "enum": [
        "doc",
        "graffiti",
        "audio_message"
      ]
    },
    "docs_doc_preview": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#/definitions/docs_doc_preview_photo"
        },
        "video": {
          "$ref": "#/definitions/docs_doc_preview_video"
        }
      }
    },
    "docs_doc_preview_photo": {
      "type": "object",
      "properties": {
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        }
      }
    },
    "docs_doc_preview_video": {
      "type": "object",
      "properties": {
        "filesize": {
          "type": "integer",
          "description": "Video file size in bites",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Video's height in pixels",
          "minimum": 0
        },
        "src": {
          "type": "string",
          "format": "uri",
          "description": "Video URL"
        },
        "width": {
          "type": "integer",
          "description": "Video's width in pixels",
          "minimum": 0
        }
      },
      "required": [
        "src",
        "width",
        "height",
        "filesize"
      ],
      "additionalProperties": false
    },
    "docs_doc_types": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of docs"
        },
        "id": {
          "type": "integer",
          "description": "Doc type ID"
        },
        "title": {
          "type": "string",
          "description": "Doc type title"
        }
      }
    },
    "docs_doc_upload_response": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "description": "Uploaded file data"
        }
      },
      "withoutRefs": true
    },
    "events_event_attach": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address of event"
        },
        "button_text": {
          "type": "string",
          "description": "text of attach"
        },
        "friends": {
          "type": "array",
          "description": "array of friends ids",
          "items": {
            "type": "integer"
          }
        },
        "id": {
          "type": "integer",
          "description": "event ID",
          "minimum": 0
        },
        "is_favorite": {
          "type": "boolean",
          "description": "is favorite"
        },
        "member_status": {
          "$ref": "#/definitions/groups_group_full_member_status",
          "description": "Current user's member status"
        },
        "text": {
          "type": "string",
          "description": "text of attach"
        },
        "time": {
          "type": "integer",
          "description": "event start time"
        }
      },
      "required": [
        "id",
        "is_favorite",
        "text",
        "friends",
        "button_text"
      ],
      "additionalProperties": false
    },
    "fave_bookmark": {
      "type": "object",
      "properties": {
        "added_date": {
          "type": "integer",
          "description": "Timestamp, when this item was bookmarked",
          "minimum": 0
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "post": {
          "$ref": "#/definitions/wall_wallpost_full"
        },
        "product": {
          "$ref": "#/definitions/market_market_item"
        },
        "seen": {
          "type": "boolean",
          "description": "Has user seen this item"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fave_tag"
          }
        },
        "type": {
          "description": "Item type",
          "$ref": "#/definitions/fave_bookmark_type"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        }
      },
      "required": [
        "type",
        "seen",
        "added_date",
        "tags"
      ]
    },
    "fave_bookmark_type": {
      "type": "string",
      "enum": [
        "post",
        "video",
        "product",
        "article",
        "link"
      ]
    },
    "fave_page": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Some info about user or group"
        },
        "group": {
          "$ref": "#/definitions/groups_group_full"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fave_tag"
          }
        },
        "type": {
          "description": "Item type",
          "$ref": "#/definitions/fave_page_type"
        },
        "updated_date": {
          "type": "integer",
          "description": "Timestamp, when this page was bookmarked",
          "minimum": 0
        },
        "user": {
          "$ref": "#/definitions/users_user_full"
        }
      },
      "required": [
        "type",
        "description",
        "tags"
      ],
      "withoutRefs": true
    },
    "fave_page_type": {
      "type": "string",
      "enum": [
        "user",
        "group",
        "hints"
      ]
    },
    "fave_tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Tag id",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Tag name"
        }
      }
    },
    "friends_friend_status": {
      "type": "object",
      "properties": {
        "friend_status": {
          "$ref": "#/definitions/friends_friend_status_status"
        },
        "read_state": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether request is unviewed"
        },
        "request_message": {
          "type": "string",
          "description": "Message sent with request"
        },
        "sign": {
          "type": "string",
          "description": "MD5 hash for the result validation"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        }
      },
      "required": [
        "user_id",
        "friend_status"
      ],
      "additionalProperties": false
    },
    "friends_friend_status_status": {
      "type": "integer",
      "description": "Friend status with the user",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not a friend",
        "outcoming request",
        "incoming request",
        "is friend"
      ]
    },
    "friends_friends_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID"
        },
        "name": {
          "type": "string",
          "description": "List title"
        }
      },
      "required": [
        "name",
        "id"
      ],
      "additionalProperties": false
    },
    "friends_mutual_friend": {
      "type": "object",
      "properties": {
        "common_count": {
          "type": "integer",
          "description": "Total mutual friends number"
        },
        "common_friends": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          }
        },
        "id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "friends_requests": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "ID of the user by whom friend has been suggested"
        },
        "mutual": {
          "$ref": "#/definitions/friends_requests_mutual"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "friends_requests_mutual": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total mutual friends number"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          }
        }
      },
      "additionalProperties": false
    },
    "friends_requests_xtr_message": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "ID of the user by whom friend has been suggested"
        },
        "message": {
          "type": "string",
          "description": "Message sent with a request"
        },
        "mutual": {
          "$ref": "#/definitions/friends_requests_mutual"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "friends_user_xtr_lists": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "lists": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "IDs of friend lists with user"
              }
            }
          }
        }
      ]
    },
    "friends_user_xtr_phone": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "phone": {
              "type": "string",
              "description": "User phone"
            }
          }
        }
      ]
    },
    "gifts_gift": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when gist has been sent in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Gift sender ID"
        },
        "gift": {
          "$ref": "#/definitions/gifts_layout"
        },
        "gift_hash": {
          "type": "string",
          "description": "Hash"
        },
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "message": {
          "type": "string",
          "description": "Comment text"
        },
        "privacy": {
          "$ref": "#/definitions/gifts_gift_privacy"
        }
      }
    },
    "gifts_gift_privacy": {
      "type": "integer",
      "description": "Gift privacy",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "name and message for all",
        "name for all",
        "name and message for recipient only"
      ]
    },
    "gifts_layout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "thumb_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 256 px in width"
        },
        "thumb_48": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 48 px in width"
        },
        "thumb_96": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 96 px in width"
        }
      }
    },
    "groups_address": {
      "type": "object",
      "properties": {
        "additional_address": {
          "type": "string",
          "description": "Additional address to the place (6 floor, left door)"
        },
        "address": {
          "type": "string",
          "description": "String address to the place (Nevsky, 28)"
        },
        "city_id": {
          "type": "integer",
          "description": "City id of address",
          "minimum": 0
        },
        "country_id": {
          "type": "integer",
          "description": "Country id of address",
          "minimum": 0
        },
        "distance": {
          "type": "integer",
          "description": "Distance from the point"
        },
        "id": {
          "type": "integer",
          "description": "Address id"
        },
        "latitude": {
          "type": "number",
          "description": "Address latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Address longitude"
        },
        "metro_station_id": {
          "type": "integer",
          "description": "Metro id of address",
          "minimum": 0
        },
        "phone": {
          "type": "string",
          "description": "Address phone"
        },
        "time_offset": {
          "type": "integer",
          "description": "Time offset int minutes from utc time"
        },
        "timetable": {
          "description": "Week timetable for the address",
          "$ref": "#/definitions/groups_address_timetable"
        },
        "title": {
          "type": "string",
          "description": "Title of the place (Zinger, etc)"
        },
        "work_info_status": {
          "description": "Status of information about timetable",
          "$ref": "#/definitions/groups_address_work_info_status"
        }
      },
      "required": [
        "id"
      ]
    },
    "groups_address_timetable": {
      "type": "object",
      "description": "Timetable for a week",
      "properties": {
        "fri": {
          "description": "Timetable for friday",
          "$ref": "#/definitions/groups_address_timetable_day"
        },
        "mon": {
          "description": "Timetable for monday",
          "$ref": "#/definitions/groups_address_timetable_day"
        },
        "sat": {
          "description": "Timetable for saturday",
          "$ref": "#/definitions/groups_address_timetable_day"
        },
        "sun": {
          "description": "Timetable for sunday",
          "$ref": "#/definitions/groups_address_timetable_day"
        },
        "thu": {
          "description": "Timetable for thursday",
          "$ref": "#/definitions/groups_address_timetable_day"
        },
        "tue": {
          "description": "Timetable for tuesday",
          "$ref": "#/definitions/groups_address_timetable_day"
        },
        "wed": {
          "description": "Timetable for wednesday",
          "$ref": "#/definitions/groups_address_timetable_day"
        }
      }
    },
    "groups_address_timetable_day": {
      "type": "object",
      "description": "Timetable for one day",
      "properties": {
        "break_close_time": {
          "type": "integer",
          "description": "Close time of the break in minutes"
        },
        "break_open_time": {
          "type": "integer",
          "description": "Start time of the break in minutes"
        },
        "close_time": {
          "type": "integer",
          "description": "Close time in minutes"
        },
        "open_time": {
          "type": "integer",
          "description": "Open time in minutes"
        }
      },
      "required": [
        "open_time",
        "close_time"
      ]
    },
    "groups_address_work_info_status": {
      "type": "string",
      "description": "Status of information about timetable",
      "enum": [
        "no_information",
        "temporarily_closed",
        "always_opened",
        "timetable",
        "forever_closed"
      ]
    },
    "groups_addresses_info": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "description": "Information whether addresses is enabled",
          "type": "boolean"
        },
        "main_address_id": {
          "type": "integer",
          "description": "Main address id for group"
        }
      },
      "required": [
        "is_enabled"
      ],
      "additionalProperties": false
    },
    "groups_ban_info": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "description": "Administrator ID",
          "minimum": 1
        },
        "comment": {
          "type": "string",
          "description": "Comment for a ban"
        },
        "comment_visible": {
          "type": "boolean",
          "description": "Show comment for user"
        },
        "is_closed": {
          "type": "boolean"
        },
        "date": {
          "type": "integer",
          "description": "Date when user has been added to blacklist in Unixtime",
          "minimum": 0
        },
        "end_date": {
          "type": "integer",
          "description": "Date when user will be removed from blacklist in Unixtime",
          "minimum": 0
        },
        "reason": {
          "$ref": "#/definitions/groups_ban_info_reason"
        }
      },
      "additionalProperties": false
    },
    "groups_ban_info_reason": {
      "type": "integer",
      "description": "Ban reason",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "enumNames": [
        "other",
        "spam",
        "verbal abuse",
        "strong language",
        "flood"
      ]
    },
    "groups_banned_item": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "objects.json#/definitions/groups_owner_xtr_ban_info"
        }
      ]
    },
    "groups_callback_server": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "title": {
          "type": "string"
        },
        "creator_id": {
          "type": "integer",
          "minimum": 0
        },
        "url": {
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "unconfigured",
            "failed",
            "wait",
            "ok"
          ]
        }
      },
      "required": [
        "id",
        "title",
        "creator_id",
        "url",
        "secret_key",
        "status"
      ]
    },
    "groups_callback_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "#/definitions/groups_long_poll_events"
        }
      }
    },
    "groups_contacts_item": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string",
          "description": "Contact description"
        },
        "email": {
          "type": "string",
          "description": "Contact email"
        },
        "phone": {
          "type": "string",
          "description": "Contact phone"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "groups_counters_group": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "integer",
          "description": "Addresses number"
        },
        "albums": {
          "type": "integer",
          "description": "Photo albums number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "docs": {
          "type": "integer",
          "description": "Docs number"
        },
        "market": {
          "type": "integer",
          "description": "Market items number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "topics": {
          "type": "integer",
          "description": "Topics number"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        }
      }
    },
    "groups_cover": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Information whether cover is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        }
      },
      "required": [
        "enabled"
      ],
      "additionalProperties": false
    },
    "groups_fields": {
      "type": "string",
      "enum": [
        "market",
        "member_status",
        "is_favorite",
        "is_subscribed",
        "city",
        "country",
        "verified",
        "description",
        "wiki_page",
        "members_count",
        "counters",
        "cover",
        "can_post",
        "can_see_all_posts",
        "activity",
        "fixed_post",
        "can_create_topic",
        "can_upload_video",
        "has_photo",
        "status",
        "main_album_id",
        "links",
        "contacts",
        "site",
        "main_section",
        "trending",
        "can_message",
        "is_market_cart_enabled",
        "is_messages_blocked",
        "can_send_notify",
        "online_status",
        "start_date",
        "finish_date",
        "age_limits",
        "ban_info",
        "action_button",
        "author_id",
        "phone",
        "has_market_app",
        "addresses",
        "live_covers",
        "is_adult",
        "can_subscribe_posts",
        "warning_notification"
      ]
    },
    "groups_filter": {
      "type": "string",
      "enum": [
        "admin",
        "editor",
        "moder",
        "groups",
        "publics",
        "events",
        "has_addresses"
      ]
    },
    "groups_group": {
      "type": "object",
      "properties": {
        "admin_level": {
          "$ref": "#/definitions/groups_group_admin_level"
        },
        "deactivated": {
          "type": "string",
          "description": "Information whether community is banned"
        },
        "finish_date": {
          "description": "Finish date in Unixtime format",
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "description": "Community ID"
        },
        "is_admin": {
          "description": "Information whether current user is administrator",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_advertiser": {
          "description": "Information whether current user is advertiser",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_closed": {
          "$ref": "#/definitions/groups_group_is_closed"
        },
        "is_member": {
          "description": "Information whether current user is member",
          "$ref": "#/definitions/base_bool_int"
        },
        "name": {
          "type": "string",
          "description": "Community name"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 100 pixels in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 200 pixels in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 50 pixels in width"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain of the community page"
        },
        "start_date": {
          "description": "Start date in Unixtime format",
          "type": "integer"
        },
        "type": {
          "$ref": "#/definitions/groups_group_type"
        }
      }
    },
    "groups_group_access": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ]
    },
    "groups_group_admin_level": {
      "type": "integer",
      "description": "Level of current user's credentials as manager",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group_age_limits": {
      "type": "integer",
      "default": 1,
      "minimum": 0,
      "enumNames": [
        "unlimited",
        "16 plus",
        "18 plus"
      ],
      "enum": [
        1,
        2,
        3
      ]
    },
    "groups_group_audio": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_ban_info": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Ban comment"
        },
        "end_date": {
          "type": "integer",
          "description": "End date of ban in Unixtime"
        }
      },
      "additionalProperties": false
    },
    "groups_group_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_object_with_name"
          }
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "groups_group_category_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "page_count": {
          "type": "integer",
          "description": "Pages number"
        },
        "page_previews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group"
          }
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group_category"
          }
        }
      },
      "required": [
        "id",
        "name",
        "page_count",
        "page_previews"
      ],
      "additionalProperties": false
    },
    "groups_group_category_type": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "groups_group_docs": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/groups_group"
        },
        {
          "properties": {
            "market": {
              "$ref": "#/definitions/groups_market_info"
            },
            "member_status": {
              "$ref": "#/definitions/groups_group_full_member_status",
              "description": "Current user's member status"
            },
            "is_favorite": {
              "description": "Information whether community is in faves",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_subscribed": {
              "description": "Information whether current user is subscribed",
              "$ref": "#/definitions/base_bool_int"
            },
            "city": {
              "$ref": "#/definitions/base_object"
            },
            "country": {
              "$ref": "#/definitions/base_country"
            },
            "verified": {
              "description": "Information whether community is verified",
              "$ref": "#/definitions/base_bool_int"
            },
            "description": {
              "type": "string",
              "description": "Community description"
            },
            "wiki_page": {
              "type": "string",
              "description": "Community's main wiki page title"
            },
            "members_count": {
              "type": "integer",
              "description": "Community members number"
            },
            "counters": {
              "$ref": "#/definitions/groups_counters_group"
            },
            "cover": {
              "$ref": "#/definitions/groups_cover"
            },
            "can_post": {
              "description": "Information whether current user can post on community's wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see all posts on community's wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "activity": {
              "type": "string",
              "description": "Type of group, start date of event or category of public page"
            },
            "fixed_post": {
              "type": "integer",
              "description": "Fixed post ID"
            },
            "can_create_topic": {
              "description": "Information whether current user can create topic",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_upload_video": {
              "description": "Information whether current user can upload video",
              "$ref": "#/definitions/base_bool_int"
            },
            "has_photo": {
              "description": "Information whether community has photo",
              "$ref": "#/definitions/base_bool_int"
            },
            "status": {
              "type": "string",
              "description": "Community status"
            },
            "main_album_id": {
              "type": "integer",
              "description": "Community's main photo album ID"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groups_links_item"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groups_contacts_item"
              }
            },
            "site": {
              "type": "string",
              "description": "Community's website"
            },
            "main_section": {
              "$ref": "#/definitions/groups_group_full_main_section"
            },
            "trending": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the community has a \"fire\" pictogram."
            },
            "can_message": {
              "description": "Information whether current user can send a message to community",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_messages_blocked": {
              "description": "Information whether community can send a message to current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_send_notify": {
              "description": "Information whether community can send notifications by phone number to current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "online_status": {
              "$ref": "#/definitions/groups_online_status",
              "description": "Status of replies in community messages"
            },
            "age_limits": {
              "$ref": "#/definitions/groups_group_full_age_limits",
              "description": "Information whether age limit"
            },
            "ban_info": {
              "$ref": "#/definitions/groups_group_ban_info",
              "description": "User ban info"
            },
            "addresses": {
              "$ref": "#/definitions/groups_addresses_info",
              "description": "Info about addresses in groups"
            },
            "is_subscribed_podcasts": {
              "description": "Information whether current user is subscribed to podcasts",
              "type": "boolean"
            },
            "can_subscribe_podcasts": {
              "description": "Owner in whitelist or not",
              "type": "boolean"
            },
            "can_subscribe_posts": {
              "description": "Can subscribe to wall",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "groups_group_full_age_limits": {
      "type": "integer",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "no",
        "over 16",
        "over 18"
      ]
    },
    "groups_group_full_main_section": {
      "type": "integer",
      "description": "Main section of community",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "enumNames": [
        "absent",
        "photos",
        "topics",
        "audio",
        "video",
        "market"
      ]
    },
    "groups_group_full_member_status": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "enumNames": [
        "not a member",
        "member",
        "not sure",
        "declined",
        "has sent a request",
        "invited"
      ]
    },
    "groups_group_is_closed": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ],
      "description": "Information whether community is closed"
    },
    "groups_group_link": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Link label"
        },
        "desc": {
          "type": "string",
          "description": "Link description"
        },
        "edit_title": {
          "description": "Information whether the title can be edited",
          "$ref": "#/definitions/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "image_processing": {
          "description": "Information whether the image on processing",
          "$ref": "#/definitions/base_bool_int"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        }
      },
      "additionalProperties": false
    },
    "groups_group_market_currency": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        643,
        980,
        398,
        978,
        840
      ],
      "enumNames": [
        "russian rubles",
        "ukrainian hryvnia",
        "kazakh tenge",
        "euro",
        "us dollars"
      ]
    },
    "groups_group_photos": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_public_category_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "subtypes_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group_category_type"
          }
        }
      }
    },
    "groups_group_role": {
      "type": "string",
      "enum": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group_settings": {
      "type": "object",
      "properties": {
        "access": {
          "type": "integer",
          "description": "Community access settings"
        },
        "address": {
          "type": "string",
          "description": "Community's page domain"
        },
        "audio": {
          "type": "integer",
          "description": "Audio settings"
        },
        "description": {
          "type": "string",
          "description": "Community description"
        },
        "docs": {
          "type": "integer",
          "description": "Docs settings"
        },
        "obscene_filter": {
          "description": "Information whether the obscene filter is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "obscene_stopwords": {
          "description": "Information whether the stopwords filter is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "obscene_words": {
          "type": "string",
          "description": "The list of stop words"
        },
        "photos": {
          "type": "integer",
          "description": "Photos settings"
        },
        "public_category": {
          "type": "integer",
          "description": "Information about the group category"
        },
        "public_category_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_group_public_category_list"
          }
        },
        "public_subcategory": {
          "type": "integer",
          "description": "Information about the group subcategory"
        },
        "rss": {
          "type": "string",
          "format": "uri",
          "description": "URL of the RSS feed"
        },
        "subject": {
          "type": "integer",
          "description": "Community subject ID"
        },
        "subject_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_subject_item"
          }
        },
        "title": {
          "type": "string",
          "description": "Community title"
        },
        "topics": {
          "type": "integer",
          "description": "Topics settings"
        },
        "video": {
          "type": "integer",
          "description": "Video settings"
        },
        "wall": {
          "type": "integer",
          "description": "Wall settings"
        },
        "website": {
          "type": "string",
          "description": "Community website"
        },
        "wiki": {
          "type": "integer",
          "description": "Wiki settings"
        }
      }
    },
    "groups_group_subject": {
      "type": "string",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42
      ],
      "enumNames": [
        "auto",
        "activity holidays",
        "business",
        "pets",
        "health",
        "dating and communication",
        "games",
        "it",
        "cinema",
        "beauty and fashion",
        "cooking",
        "art and culture",
        "literature",
        "mobile services and internet",
        "music",
        "science and technology",
        "real estate",
        "news and media",
        "security",
        "education",
        "home and renovations",
        "politics",
        "food",
        "industry",
        "travel",
        "work",
        "entertainment",
        "religion",
        "family",
        "sports",
        "insurance",
        "television",
        "goods and services",
        "hobbies",
        "finance",
        "photo",
        "esoterics",
        "electronics and appliances",
        "erotic",
        "humor",
        "society_humanities",
        "design and graphics"
      ]
    },
    "groups_group_topics": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_type": {
      "type": "string",
      "description": "Community type",
      "enum": [
        "group",
        "page",
        "event"
      ]
    },
    "groups_group_video": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_wall": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited",
        "closed"
      ]
    },
    "groups_group_wiki": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_xtr_invited_by": {
      "type": "object",
      "properties": {
        "admin_level": {
          "$ref": "#/definitions/groups_group_xtr_invited_by_admin_level"
        },
        "id": {
          "type": "string",
          "description": "Community ID"
        },
        "invited_by": {
          "type": "integer",
          "description": "Inviter ID",
          "minimum": 1
        },
        "is_admin": {
          "description": "Information whether current user is manager",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_advertiser": {
          "description": "Information whether current user is advertiser",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_closed": {
          "description": "Information whether community is closed",
          "$ref": "#/definitions/base_bool_int"
        },
        "is_member": {
          "description": "Information whether current user is member",
          "$ref": "#/definitions/base_bool_int"
        },
        "name": {
          "type": "string",
          "description": "Community name"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 100 pixels in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 200 pixels in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 50 pixels in width"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain of the community page"
        },
        "type": {
          "$ref": "#/definitions/groups_group_xtr_invited_by_type"
        }
      },
      "additionalProperties": false
    },
    "groups_group_xtr_invited_by_admin_level": {
      "type": "integer",
      "description": "Level of current user's credentials as manager",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group_xtr_invited_by_type": {
      "type": "string",
      "description": "Community type",
      "enum": [
        "group",
        "page",
        "event"
      ]
    },
    "groups_groups_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Communities number",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Community ID"
          }
        }
      },
      "required": [
        "count",
        "items"
      ],
      "additionalProperties": false
    },
    "groups_links_item": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string",
          "description": "Link description"
        },
        "edit_title": {
          "description": "Information whether the link title can be edited",
          "$ref": "#/definitions/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "name": {
          "type": "string",
          "description": "Link title"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square image of the link with 100 pixels in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square image of the link with 50 pixels in width"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        }
      }
    },
    "groups_long_poll_events": {
      "type": "object",
      "properties": {
        "audio_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "board_post_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_change_photo": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_change_settings": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_join": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_leave": {
          "$ref": "#/definitions/base_bool_int"
        },
        "group_officers_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "lead_forms_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "market_comment_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_allow": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_deny": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_read": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_reply": {
          "$ref": "#/definitions/base_bool_int"
        },
        "message_typing_state": {
          "$ref": "#/definitions/base_bool_int"
        },
        "messages_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_comment_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "poll_vote_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "user_block": {
          "$ref": "#/definitions/base_bool_int"
        },
        "user_unblock": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_comment_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "video_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_post_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_delete": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_edit": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_new": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_reply_restore": {
          "$ref": "#/definitions/base_bool_int"
        },
        "wall_repost": {
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "app_payload",
        "message_new",
        "message_reply",
        "photo_new",
        "audio_new",
        "video_new",
        "wall_reply_new",
        "wall_reply_edit",
        "wall_reply_delete",
        "wall_reply_restore",
        "wall_post_new",
        "board_post_new",
        "board_post_edit",
        "board_post_restore",
        "board_post_delete",
        "photo_comment_new",
        "photo_comment_edit",
        "photo_comment_delete",
        "photo_comment_restore",
        "video_comment_new",
        "video_comment_edit",
        "video_comment_delete",
        "video_comment_restore",
        "market_comment_new",
        "market_comment_edit",
        "market_comment_delete",
        "market_comment_restore",
        "poll_vote_new",
        "group_join",
        "group_leave",
        "group_change_settings",
        "group_change_photo",
        "group_officers_edit",
        "message_allow",
        "message_deny",
        "wall_repost",
        "user_block",
        "user_unblock",
        "messages_edit",
        "message_typing_state",
        "message_read"
      ]
    },
    "groups_long_poll_server": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Long Poll key"
        },
        "server": {
          "type": "string",
          "description": "Long Poll server address"
        },
        "ts": {
          "type": "string",
          "description": "Number of the last event"
        }
      },
      "required": [
        "key",
        "server",
        "ts"
      ],
      "additionalProperties": false
    },
    "groups_long_poll_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "#/definitions/groups_long_poll_events"
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Shows whether Long Poll is enabled"
        }
      },
      "required": [
        "is_enabled",
        "events"
      ]
    },
    "groups_market_info": {
      "type": "object",
      "properties": {
        "contact_id": {
          "type": "integer",
          "description": "Contact person ID"
        },
        "currency": {
          "$ref": "#/definitions/market_currency"
        },
        "currency_text": {
          "type": "string",
          "description": "Currency name"
        },
        "enabled": {
          "description": "Information whether the market is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "main_album_id": {
          "type": "integer",
          "description": "Main market album ID"
        },
        "price_max": {
          "type": "integer",
          "description": "Maximum price"
        },
        "price_min": {
          "type": "integer",
          "description": "Minimum price"
        }
      }
    },
    "groups_member_role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/groups_member_role_permission"
          }
        },
        "role": {
          "$ref": "#/definitions/groups_member_role_status"
        }
      }
    },
    "groups_member_role_permission": {
      "type": "string",
      "enum": [
        "ads"
      ]
    },
    "groups_member_role_status": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator"
      ]
    },
    "groups_member_status": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        }
      },
      "required": [
        "member",
        "user_id"
      ],
      "additionalProperties": false
    },
    "groups_member_status_full": {
      "type": "object",
      "properties": {
        "can_invite": {
          "description": "Information whether user can be invited",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "can_recall": {
          "description": "Information whether user's invite to the group can be recalled",
          "$ref": "objects.json#/definitions/base_bool_int"
        },
        "invitation": {
          "description": "Information whether user has been invited to the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "request": {
          "description": "Information whether user has send request to the group",
          "$ref": "#/definitions/base_bool_int"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1
        }
      },
      "required": [
        "member",
        "user_id"
      ],
      "additionalProperties": false
    },
    "groups_online_status": {
      "type": "object",
      "description": "Online status of group",
      "properties": {
        "minutes": {
          "type": "integer",
          "description": "Estimated time of answer (for status = answer_mark)"
        },
        "status": {
          "$ref": "#/definitions/groups_online_status_type"
        }
      },
      "required": [
        "status"
      ],
      "additionalProperties": false
    },
    "groups_online_status_type": {
      "type": "string",
      "description": "Type of online status of group",
      "enum": [
        "none",
        "online",
        "answer_mark"
      ]
    },
    "groups_owner_xtr_ban_info": {
      "type": "object",
      "properties": {
        "ban_info": {
          "$ref": "#/definitions/groups_ban_info"
        },
        "group": {
          "$ref": "#/definitions/groups_group",
          "description": "Information about group if type = group"
        },
        "profile": {
          "$ref": "#/definitions/users_user",
          "description": "Information about group if type = profile"
        },
        "type": {
          "$ref": "#/definitions/groups_owner_xtr_ban_info_type"
        }
      }
    },
    "groups_owner_xtr_ban_info_type": {
      "type": "string",
      "description": "Owner type",
      "enum": [
        "group",
        "profile"
      ]
    },
    "groups_role_options": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator"
      ]
    },
    "groups_subject_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Subject ID"
        },
        "name": {
          "type": "string",
          "description": "Subject title"
        }
      }
    },
    "groups_token_permission_setting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "setting": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "setting",
        "name"
      ],
      "additionalProperties": false
    },
    "groups_user_xtr_role": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "role": {
              "$ref": "#/definitions/groups_role_options"
            }
          }
        }
      ]
    },
    "leads_checked": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason why user can't start the lead"
        },
        "result": {
          "$ref": "#/definitions/leads_checked_result"
        },
        "sid": {
          "type": "string",
          "description": "Session ID"
        },
        "start_link": {
          "type": "string",
          "format": "uri",
          "description": "URL user should open to start the lead"
        }
      }
    },
    "leads_checked_result": {
      "type": "string",
      "description": "Information whether user can start the lead",
      "enum": [
        "true",
        "false"
      ]
    },
    "leads_complete": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "integer",
          "description": "Offer cost"
        },
        "limit": {
          "type": "integer",
          "description": "Offer limit"
        },
        "spent": {
          "type": "integer",
          "description": "Amount of spent votes"
        },
        "success": {
          "$ref": "#/definitions/base_ok_response"
        },
        "test_mode": {
          "description": "Information whether test mode is enabled",
          "$ref": "#/definitions/base_bool_int"
        }
      }
    },
    "leads_entry": {
      "type": "object",
      "properties": {
        "aid": {
          "type": "integer",
          "description": "Application ID"
        },
        "comment": {
          "type": "string",
          "description": "Comment text"
        },
        "date": {
          "type": "integer",
          "description": "Date when the action has been started in Unixtime"
        },
        "sid": {
          "type": "string",
          "description": "Session string ID"
        },
        "start_date": {
          "type": "integer",
          "description": "Start date in Unixtime (for status=2)"
        },
        "status": {
          "type": "integer",
          "description": "Action type"
        },
        "test_mode": {
          "description": "Information whether test mode is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        }
      }
    },
    "leads_lead": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "integer",
          "description": "Completed offers number"
        },
        "cost": {
          "type": "integer",
          "description": "Offer cost"
        },
        "days": {
          "$ref": "#/definitions/leads_lead_days"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "limit": {
          "type": "integer",
          "description": "Lead limit"
        },
        "spent": {
          "type": "integer",
          "description": "Amount of spent votes"
        },
        "started": {
          "type": "integer",
          "description": "Started offers number"
        }
      }
    },
    "leads_lead_days": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "integer",
          "description": "Completed offers number"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "spent": {
          "type": "integer",
          "description": "Amount of spent votes"
        },
        "started": {
          "type": "integer",
          "description": "Started offers number"
        }
      }
    },
    "leads_start": {
      "type": "object",
      "properties": {
        "test_mode": {
          "description": "Information whether test mode is enabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "vk_sid": {
          "type": "string",
          "description": "Session data"
        }
      }
    },
    "likes_type": {
      "type": "string",
      "enum": [
        "post",
        "comment",
        "photo",
        "audio",
        "video",
        "note",
        "market",
        "photo_comment",
        "video_comment",
        "topic_comment",
        "market_comment",
        "sitepage"
      ]
    },
    "market_currency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Currency ID",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Currency sign"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "market_market_album": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Items number",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Market album ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Market album owner's ID"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "title": {
          "type": "string",
          "description": "Market album title"
        },
        "updated_time": {
          "type": "integer",
          "description": "Date when album has been updated last time in Unixtime",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "count",
        "updated_time"
      ],
      "additionalProperties": false
    },
    "market_market_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID"
        },
        "name": {
          "type": "string",
          "description": "Category name"
        },
        "section": {
          "$ref": "#/definitions/market_section"
        }
      },
      "required": [
        "id",
        "name",
        "section"
      ],
      "additionalProperties": false
    },
    "market_market_item": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the market item"
        },
        "availability": {
          "$ref": "#/definitions/market_market_item_availability"
        },
        "button_title": {
          "type": "string",
          "description": "Title for button for url"
        },
        "category": {
          "$ref": "#/definitions/market_market_category"
        },
        "date": {
          "type": "integer",
          "description": "Date when the item has been created in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Item description"
        },
        "external_id": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "description": "Item ID",
          "minimum": 0
        },
        "is_favorite": {
          "type": "boolean"
        },
        "owner_id": {
          "type": "integer",
          "description": "Item owner's ID"
        },
        "price": {
          "$ref": "#/definitions/market_price"
        },
        "thumb_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "title": {
          "type": "string",
          "description": "Item title"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to item"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "description",
        "price",
        "category",
        "date",
        "thumb_photo",
        "availability"
      ],
      "additionalProperties": false
    },
    "market_market_item_availability": {
      "type": "integer",
      "description": "Information whether the item is available",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "available",
        "removed",
        "unavailable"
      ]
    },
    "market_market_item_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/market_market_item"
        },
        {
          "properties": {
            "albums_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/photos_photo"
              }
            },
            "can_comment": {
              "description": "Information whether current use can comment the item",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_repost": {
              "description": "Information whether current use can repost the item",
              "$ref": "#/definitions/base_bool_int"
            },
            "likes": {
              "$ref": "#/definitions/base_likes"
            },
            "reposts": {
              "$ref": "#/definitions/base_reposts_info"
            },
            "views_count": {
              "type": "integer",
              "description": "Views number"
            }
          }
        }
      ]
    },
    "market_price": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount"
        },
        "currency": {
          "$ref": "#/definitions/market_currency"
        },
        "discount_rate": {
          "type": "integer"
        },
        "old_amount": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Text"
        }
      }
    },
    "market_section": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Section ID",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Section name"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "additionalProperties": false
    },
    "message_chat_preview": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0
        },
        "joined": {
          "type": "boolean"
        },
        "local_id": {
          "type": "integer"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "members_count": {
          "type": "integer",
          "minimum": 0
        },
        "title": {
          "type": "string"
        }
      }
    },
    "messages_audio_message": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for audio message"
        },
        "duration": {
          "type": "integer",
          "description": "Audio message duration in seconds",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Audio message ID",
          "minimum": 0
        },
        "link_mp3": {
          "type": "string",
          "format": "uri",
          "description": "MP3 file URL"
        },
        "link_ogg": {
          "type": "string",
          "format": "uri",
          "description": "OGG file URL"
        },
        "owner_id": {
          "type": "integer",
          "description": "Audio message owner ID"
        },
        "waveform": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Sound visualisation",
            "minimum": 0
          }
        }
      },
      "required": [
        "id",
        "owner_id",
        "duration",
        "waveform",
        "link_ogg",
        "link_mp3"
      ],
      "additionalProperties": false
    },
    "messages_chat": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "description": "Chat creator ID"
        },
        "id": {
          "type": "integer",
          "description": "Chat ID"
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "#/definitions/base_bool_int"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50 px in width"
        },
        "push_settings": {
          "$ref": "#/definitions/messages_chat_push_settings"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "type": {
          "type": "string",
          "description": "Chat type"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID"
          }
        }
      },
      "required": [
        "id",
        "type",
        "admin_id",
        "users"
      ],
      "additionalProperties": false
    },
    "messages_chat_full": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "description": "Chat creator ID"
        },
        "id": {
          "type": "integer",
          "description": "Chat ID"
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "#/definitions/base_bool_int"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "#/definitions/base_bool_int"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50 px in width"
        },
        "push_settings": {
          "$ref": "#/definitions/messages_chat_push_settings"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "type": {
          "type": "string",
          "description": "Chat type"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_user_xtr_invited_by"
          }
        }
      },
      "required": [
        "id",
        "type",
        "admin_id",
        "users"
      ],
      "additionalProperties": false
    },
    "messages_chat_push_settings": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled"
        },
        "sound": {
          "description": "Information whether the sound is on",
          "$ref": "#/definitions/base_bool_int"
        }
      }
    },
    "messages_chat_restrictions": {
      "type": "object",
      "properties": {
        "admins_promote_users": {
          "type": "boolean",
          "description": "Only admins can promote users to admins"
        },
        "only_admins_edit_info": {
          "type": "boolean",
          "description": "Only admins can change chat info"
        },
        "only_admins_edit_pin": {
          "type": "boolean",
          "description": "Only admins can edit pinned message"
        },
        "only_admins_invite": {
          "type": "boolean",
          "description": "Only admins can invite users to this chat"
        },
        "only_admins_kick": {
          "type": "boolean",
          "description": "Only admins can kick users from this chat"
        }
      }
    },
    "messages_conversation": {
      "type": "object",
      "properties": {
        "peer": {
          "$ref": "#/definitions/messages_conversation_peer"
        },
        "last_message_id": {
          "type": "integer",
          "minimum": 0,
          "description": "ID of the last message in conversation"
        },
        "in_read": {
          "type": "integer",
          "minimum": 0,
          "description": "Last message user have read"
        },
        "out_read": {
          "type": "integer",
          "minimum": 0,
          "description": "Last outcoming message have been read by the opponent"
        },
        "unread_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Unread messages number"
        },
        "important": {
          "type": "boolean"
        },
        "unanswered": {
          "type": "boolean"
        },
        "special_service_type": {
          "type": "string",
          "enum": [
            "business_notify"
          ]
        },
        "message_request": {
          "type": "string",
          "enum": [
            "pending",
            "rejected"
          ]
        },
        "mentions": {
          "type": "array",
          "description": "Ids of messages with mentions",
          "items": {
            "type": "integer",
            "description": "Message id of message with mention"
          }
        },
        "current_keyboard": {
          "$ref": "#/definitions/messages_keyboard"
        }
      },
      "required": [
        "peer",
        "in_read",
        "out_read",
        "last_message_id"
      ]
    },
    "messages_conversation_member": {
      "type": "object",
      "properties": {
        "can_kick": {
          "type": "boolean",
          "description": "Is it possible for user to kick this member"
        },
        "invited_by": {
          "type": "integer"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_owner": {
          "type": "boolean"
        },
        "is_message_request": {
          "type": "boolean"
        },
        "join_date": {
          "type": "integer",
          "minimum": 0
        },
        "request_date": {
          "type": "integer",
          "minimum": 0,
          "description": "Message request date"
        },
        "member_id": {
          "type": "integer"
        }
      },
      "required": [
        "member_id"
      ]
    },
    "messages_conversation_peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "local_id": {
          "type": "integer"
        },
        "type": {
          "$ref": "#/definitions/messages_conversation_peer_type"
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "messages_conversation_peer_type": {
      "type": "string",
      "enum": [
        "chat",
        "email",
        "user",
        "group"
      ],
      "description": "Peer type"
    },
    "messages_conversation_with_message": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#/definitions/messages_conversation"
        },
        "last_message": {
          "$ref": "#/definitions/messages_message"
        }
      }
    },
    "messages_foreign_message": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Conversation message ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message was created"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "fwd_messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "reply_message": {
          "$ref": "#/definitions/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        }
      },
      "required": [
        "date",
        "from_id",
        "text"
      ]
    },
    "messages_graffiti": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for graffiti"
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Graffiti ID",
          "minimum": 0
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner ID"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti URL"
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "url",
        "width",
        "height"
      ],
      "additionalProperties": false
    },
    "messages_history_attachment": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/messages_history_message_attachment"
        },
        "message_id": {
          "type": "integer",
          "description": "Message ID"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        }
      },
      "required": [
        "message_id",
        "from_id",
        "attachment"
      ]
    },
    "messages_history_message_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/audio_audio"
        },
        "audio_message": {
          "$ref": "#/definitions/messages_audio_message"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "graffiti": {
          "$ref": "#/definitions/messages_graffiti"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "market": {
          "$ref": "#/definitions/base_link"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "share": {
          "$ref": "#/definitions/base_link"
        },
        "type": {
          "$ref": "#/definitions/messages_history_message_attachment_type"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "wall": {
          "$ref": "#/definitions/base_link"
        }
      },
      "required": [
        "type"
      ]
    },
    "messages_history_message_attachment_type": {
      "type": "string",
      "description": "Attachments type",
      "enum": [
        "photo",
        "video",
        "audio",
        "doc",
        "link",
        "market",
        "wall",
        "share",
        "graffiti",
        "audio_message"
      ]
    },
    "messages_keyboard": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "integer",
          "description": "Community or bot, which set this keyboard"
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/messages_keyboard_button"
            }
          }
        },
        "one_time": {
          "type": "boolean",
          "description": "Should this keyboard disappear on first use"
        },
        "inline": {
          "type": "boolean"
        }
      },
      "required": [
        "one_time",
        "buttons"
      ],
      "withSetters": true
    },
    "messages_keyboard_button": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/messages_keyboard_button_action"
        },
        "color": {
          "type": "string",
          "enum": [
            "default",
            "positive",
            "negative",
            "primary"
          ],
          "description": "Button color"
        }
      },
      "required": [
        "action"
      ],
      "withSetters": true
    },
    "messages_keyboard_button_action": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "app_id": {
          "type": "integer",
          "description": "Fragment value in app link like vk.com/app{app_id}_-654321#hash"
        },
        "hash": {
          "type": "string",
          "description": "Fragment value in app link like vk.com/app123456_-654321#{hash}"
        },
        "label": {
          "type": "string",
          "description": "Label for button"
        },
        "owner_id": {
          "type": "integer",
          "description": "Fragment value in app link like vk.com/app123456_{owner_id}#hash"
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "description": "Button type",
          "enum": [
            "text",
            "start",
            "location",
            "vkpay",
            "open_app"
          ]
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "withSetters": true
    },
    "messages_last_activity": {
      "type": "object",
      "properties": {
        "online": {
          "description": "Information whether user is online",
          "$ref": "#/definitions/base_bool_int"
        },
        "time": {
          "type": "integer",
          "description": "Time when user was online in Unixtime"
        }
      },
      "required": [
        "online",
        "time"
      ],
      "additionalProperties": false
    },
    "messages_longpoll_messages": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message"
          }
        }
      }
    },
    "messages_longpoll_params": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key"
        },
        "pts": {
          "type": "integer",
          "description": "Persistent timestamp"
        },
        "server": {
          "type": "string",
          "description": "Server URL"
        },
        "ts": {
          "type": "integer",
          "description": "Timestamp"
        }
      }
    },
    "messages_message": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/messages_message_action"
        },
        "admin_author_id": {
          "type": "integer",
          "description": "Only for messages from community. Contains user ID of community admin, who sent this message."
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime"
        },
        "deleted": {
          "description": "Is it an deleted message",
          "$ref": "#/definitions/base_bool_int"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "important": {
          "type": "boolean",
          "description": "Is it an important message"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "keyboard": {
          "$ref": "#/definitions/messages_keyboard"
        },
        "members_count": {
          "type": "integer",
          "description": "Members number"
        },
        "out": {
          "description": "Information whether the message is outcoming",
          "$ref": "#/definitions/base_bool_int"
        },
        "payload": {
          "type": "string"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "random_id": {
          "type": "integer",
          "description": "ID used for sending messages. It returned only for outgoing messages"
        },
        "ref": {
          "type": "string"
        },
        "ref_source": {
          "type": "string"
        },
        "reply_message": {
          "$ref": "#/definitions/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        }
      },
      "required": [
        "date",
        "from_id",
        "id",
        "out",
        "peer_id",
        "text"
      ]
    },
    "messages_message_action": {
      "type": "object",
      "properties": {
        "conversation_message_id": {
          "type": "integer",
          "description": "Message ID"
        },
        "email": {
          "type": "string",
          "description": "Email address for chat_invite_user or chat_kick_user actions"
        },
        "member_id": {
          "type": "integer",
          "description": "User or email peer ID"
        },
        "message": {
          "type": "string",
          "description": "Message body of related message"
        },
        "photo": {
          "$ref": "#/definitions/messages_message_action_photo"
        },
        "text": {
          "type": "string",
          "description": "New chat title for chat_create and chat_title_update actions"
        },
        "type": {
          "$ref": "#/definitions/messages_message_action_status"
        }
      },
      "required": [
        "type"
      ]
    },
    "messages_message_action_photo": {
      "type": "object",
      "properties": {
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50px in width"
        }
      },
      "required": [
        "photo_50",
        "photo_100",
        "photo_200"
      ]
    },
    "messages_message_action_status": {
      "type": "string",
      "description": "Action status",
      "enum": [
        "chat_photo_update",
        "chat_photo_remove",
        "chat_create",
        "chat_title_update",
        "chat_invite_user",
        "chat_kick_user",
        "chat_pin_message",
        "chat_unpin_message",
        "chat_invite_user_by_link"
      ]
    },
    "messages_message_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/audio_audio"
        },
        "audio_message": {
          "$ref": "#/definitions/messages_audio_message"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "gift": {
          "$ref": "#/definitions/gifts_layout"
        },
        "graffiti": {
          "$ref": "#/definitions/messages_graffiti"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "market": {
          "$ref": "#/definitions/market_market_item"
        },
        "market_market_album": {
          "$ref": "#/definitions/market_market_album"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "sticker": {
          "$ref": "#/definitions/base_sticker"
        },
        "type": {
          "$ref": "#/definitions/messages_message_attachment_type"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        },
        "wall": {
          "$ref": "#/definitions/wall_wallpost_full"
        },
        "wall_reply": {
          "$ref": "#/definitions/wall_wall_comment"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "messages_message_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "doc",
        "link",
        "market",
        "market_album",
        "gift",
        "sticker",
        "wall",
        "wall_reply",
        "article",
        "graffiti",
        "audio_message"
      ]
    },
    "messages_pinned_message": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Message author's ID"
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "reply_message": {
          "$ref": "#/definitions/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text"
        },
        "keyboard": {
          "$ref": "#/definitions/messages_keyboard"
        }
      },
      "required": [
        "id",
        "date",
        "from_id",
        "peer_id",
        "text"
      ]
    },
    "messages_user_xtr_invited_by": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_xtr_type"
        },
        {
          "properties": {
            "invited_by": {
              "type": "integer",
              "description": "ID of the inviter"
            }
          }
        }
      ]
    },
    "newsfeed_comments_filters": {
      "type": "string",
      "enum": [
        "post",
        "photo",
        "video",
        "topic",
        "note"
      ]
    },
    "newsfeed_event_activity": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address of event"
        },
        "button_text": {
          "type": "string",
          "description": "text of attach"
        },
        "friends": {
          "type": "array",
          "description": "array of friends ids",
          "items": {
            "type": "integer"
          }
        },
        "member_status": {
          "$ref": "#/definitions/groups_group_full_member_status",
          "description": "Current user's member status"
        },
        "text": {
          "type": "string",
          "description": "text of attach"
        },
        "time": {
          "type": "integer",
          "description": "event start time"
        }
      },
      "required": [
        "text",
        "button_text",
        "friends",
        "member_status"
      ],
      "additionalProperties": false
    },
    "newsfeed_filters": {
      "type": "string",
      "enum": [
        "post",
        "photo",
        "photo_tag",
        "wall_photo",
        "friend",
        "note",
        "audio",
        "video"
      ]
    },
    "newsfeed_ignore_item_type": {
      "type": "string",
      "enum": [
        "wall",
        "tag",
        "profilephoto",
        "video",
        "photo",
        "audio"
      ],
      "enumNames": [
        "post on the wall",
        "tag on a photo",
        "profile photo",
        "video",
        "photo",
        "audio"
      ]
    },
    "newsfeed_item_audio": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "audio": {
              "$ref": "#/definitions/newsfeed_item_audio_audio"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ]
    },
    "newsfeed_item_audio_audio": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Audios number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/audio_audio"
          }
        }
      }
    },
    "newsfeed_item_base": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/newsfeed_newsfeed_item_type"
        },
        "source_id": {
          "type": "integer",
          "description": "Item source ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when item has been added in Unixtime"
        }
      },
      "required": [
        "type",
        "source_id",
        "date"
      ]
    },
    "newsfeed_item_digest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "button_text": {
              "type": "string"
            },
            "feed_id": {
              "type": "string",
              "description": "id of feed in digest"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/wall_wallpost"
              }
            },
            "main_post_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "template": {
              "type": "string",
              "enum": [
                "list",
                "grid"
              ],
              "description": "type of digest"
            },
            "title": {
              "type": "string"
            },
            "track_code": {
              "type": "string"
            }
          }
        }
      ]
    },
    "newsfeed_item_friend": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "friends": {
              "$ref": "#/definitions/newsfeed_item_friend_friends"
            }
          }
        }
      ]
    },
    "newsfeed_item_friend_friends": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of friends has been added"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_user_id"
          }
        }
      }
    },
    "newsfeed_item_note": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "notes": {
              "$ref": "#/definitions/newsfeed_item_note_notes"
            }
          }
        }
      ]
    },
    "newsfeed_item_note_notes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Notes number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newsfeed_newsfeed_note"
          }
        }
      }
    },
    "newsfeed_item_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "photos": {
              "$ref": "#/definitions/newsfeed_item_photo_photos"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ]
    },
    "newsfeed_item_photo_photos": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Photos number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newsfeed_newsfeed_photo"
          }
        }
      }
    },
    "newsfeed_item_photo_tag": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "photo_tags": {
              "$ref": "#/definitions/newsfeed_item_photo_tag_photo_tags"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ]
    },
    "newsfeed_item_photo_tag_photo_tags": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newsfeed_newsfeed_photo"
          }
        }
      }
    },
    "newsfeed_item_stories_block": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "block_type": {
              "type": "string",
              "enum": [
                "local",
                "remote"
              ]
            },
            "stories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/stories_story"
              }
            },
            "title": {
              "type": "string"
            },
            "track_code": {
              "type": "string"
            }
          }
        }
      ]
    },
    "newsfeed_item_topic": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "comments": {
              "$ref": "#/definitions/base_comments_info"
            },
            "likes": {
              "$ref": "#/definitions/base_likes_info"
            },
            "post_id": {
              "type": "integer",
              "description": "Topic post ID"
            },
            "text": {
              "type": "string",
              "description": "Post text"
            }
          },
          "required": [
            "post_id",
            "text"
          ]
        }
      ]
    },
    "newsfeed_item_video": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "video": {
              "$ref": "#/definitions/newsfeed_item_video_video"
            }
          }
        }
      ]
    },
    "newsfeed_item_video_video": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video"
          }
        }
      }
    },
    "newsfeed_item_wallpost": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_item_base"
        },
        {
          "properties": {
            "activity": {
              "$ref": "#/definitions/newsfeed_event_activity"
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/wall_wallpost_attachment"
              }
            },
            "comments": {
              "$ref": "#/definitions/base_comments_info"
            },
            "copy_history": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/wall_wallpost"
              }
            },
            "geo": {
              "$ref": "#/definitions/base_geo"
            },
            "likes": {
              "$ref": "#/definitions/base_likes_info"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            },
            "post_source": {
              "$ref": "#/definitions/wall_post_source"
            },
            "post_type": {
              "$ref": "#/definitions/newsfeed_item_wallpost_type"
            },
            "reposts": {
              "$ref": "#/definitions/base_reposts_info"
            },
            "text": {
              "type": "string",
              "description": "Post text"
            }
          }
        }
      ]
    },
    "newsfeed_item_wallpost_type": {
      "type": "string",
      "description": "Post type",
      "enum": [
        "post",
        "copy",
        "reply"
      ]
    },
    "newsfeed_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID"
        },
        "title": {
          "type": "string",
          "description": "List title"
        }
      },
      "required": [
        "id",
        "title"
      ],
      "additionalProperties": false
    },
    "newsfeed_list_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/newsfeed_list"
        },
        {
          "properties": {
            "no_reposts": {
              "description": "Information whether reposts hiding is enabled",
              "$ref": "#/definitions/base_bool_int"
            },
            "source_ids": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "Users and communities IDs"
              }
            }
          }
        }
      ]
    },
    "newsfeed_newsfeed_item": {
      "type": "object",
      "oneOf": [
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_wallpost"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_photo"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_photo_tag"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_friend"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_note"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_audio"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_video"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_topic"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_digest"
        },
        {
          "invalid_one_of": true,
          "$ref": "#/definitions/newsfeed_item_stories_block"
        }
      ]
    },
    "newsfeed_newsfeed_item_type": {
      "type": "string",
      "description": "Item type",
      "enum": [
        "post",
        "photo",
        "photo_tag",
        "wall_photo",
        "friend",
        "note",
        "audio",
        "video",
        "topic",
        "digest",
        "stories"
      ]
    },
    "newsfeed_newsfeed_note": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments Number"
        },
        "id": {
          "type": "integer",
          "description": "Note ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "integer"
        },
        "title": {
          "type": "string",
          "description": "Note title"
        }
      }
    },
    "newsfeed_newsfeed_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/photos_photo"
        },
        {
          "properties": {
            "likes": {
              "$ref": "#/definitions/base_likes"
            },
            "comments": {
              "$ref": "#/definitions/base_object_count"
            },
            "can_comment": {
              "description": "Information whether current user can comment the photo",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_repost": {
              "description": "Information whether current user can repost the photo",
              "$ref": "#/definitions/base_bool_int"
            }
          }
        }
      ]
    },
    "notes_note": {
      "type": "object",
      "properties": {
        "read_comments": {
          "type": "integer",
          "minimum": 0
        },
        "can_comment": {
          "description": "Information whether current user can comment the note",
          "$ref": "#/definitions/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1
        },
        "text": {
          "type": "string",
          "description": "Note text"
        },
        "text_wiki": {
          "type": "string",
          "description": "Note text in wiki format"
        },
        "title": {
          "type": "string",
          "description": "Note title"
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with note preview"
        }
      },
      "required": [
        "id",
        "owner_id",
        "comments",
        "date",
        "title",
        "view_url"
      ],
      "additionalProperties": false
    },
    "notes_note_comment": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the comment has beed added in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Comment ID"
        },
        "message": {
          "type": "string",
          "description": "Comment text"
        },
        "nid": {
          "type": "integer",
          "description": "Note ID"
        },
        "oid": {
          "type": "integer",
          "description": "Note ID"
        },
        "reply_to": {
          "type": "integer",
          "description": "ID of replied comment "
        },
        "uid": {
          "type": "integer",
          "description": "Comment author's ID"
        }
      },
      "required": [
        "id",
        "uid",
        "nid",
        "oid",
        "date",
        "message"
      ],
      "additionalProperties": false
    },
    "notifications_feedback": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "from_id": {
          "type": "integer",
          "description": "Reply author's ID"
        },
        "geo": {
          "$ref": "#/definitions/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Item ID"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "text": {
          "type": "string",
          "description": "Reply text"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        }
      }
    },
    "notifications_notification": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the event has been occurred"
        },
        "feedback": {
          "$ref": "#/definitions/notifications_feedback"
        },
        "parent": {
          "$ref": "#/definitions/notifications_notification_parent"
        },
        "reply": {
          "$ref": "#/definitions/notifications_reply"
        },
        "type": {
          "type": "string",
          "description": "Notification type"
        }
      }
    },
    "notifications_notification_parent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/wall_wallpost_to_id"
        },
        {
          "$ref": "#/definitions/photos_photo"
        },
        {
          "$ref": "#/definitions/board_topic"
        },
        {
          "$ref": "#/definitions/video_video"
        },
        {
          "$ref": "#/definitions/notifications_notifications_comment"
        }
      ]
    },
    "notifications_notifications_comment": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "post": {
          "$ref": "#/definitions/wall_wallpost"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "topic": {
          "$ref": "#/definitions/board_topic"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        }
      }
    },
    "notifications_reply": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the reply has been created in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Reply ID"
        },
        "text": {
          "type": "integer",
          "description": "Reply text"
        }
      }
    },
    "notifications_send_message_error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumNames": [
            "notifications disabled",
            "flood control per hour",
            "flood control per day",
            "app is not installed"
          ],
          "description": "Error code"
        },
        "description": {
          "type": "string",
          "description": "Error description"
        }
      }
    },
    "notifications_send_message_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID"
        },
        "status": {
          "type": "boolean",
          "description": "Notification status"
        },
        "error": {
          "$ref": "#/definitions/notifications_send_message_error"
        }
      }
    },
    "oauth_error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error type"
        },
        "error_description": {
          "type": "string",
          "description": "Error description"
        },
        "redirect_uri": {
          "type": "string",
          "description": "URI for validation"
        }
      },
      "required": [
        "error",
        "error_description"
      ],
      "withoutRefs": true
    },
    "orders_amount": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orders_amount_item"
          }
        },
        "currency": {
          "type": "string",
          "description": "Currency name"
        }
      }
    },
    "orders_amount_item": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "description": "Votes amount in user's currency"
        },
        "description": {
          "type": "string",
          "description": "Amount description"
        },
        "votes": {
          "type": "string",
          "description": "Votes number"
        }
      }
    },
    "orders_order": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "description": "Amount"
        },
        "app_order_id": {
          "type": "integer",
          "description": "App order ID"
        },
        "cancel_transaction_id": {
          "type": "integer",
          "description": "Cancel transaction ID"
        },
        "date": {
          "type": "integer",
          "description": "Date of creation in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Order ID"
        },
        "item": {
          "type": "string",
          "description": "Order item"
        },
        "receiver_id": {
          "type": "integer",
          "description": "Receiver ID"
        },
        "status": {
          "type": "string",
          "description": "Order status"
        },
        "transaction_id": {
          "type": "integer",
          "description": "Transaction ID"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      }
    },
    "orders_subscription": {
      "type": "object",
      "properties": {
        "cancel_reason": {
          "type": "string",
          "description": "Cancel reason"
        },
        "create_time": {
          "type": "integer",
          "description": "Date of creation in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Subscription ID"
        },
        "item_id": {
          "type": "string",
          "description": "Subscription order item"
        },
        "next_bill_time": {
          "type": "integer",
          "description": "Date of next bill in Unixtime"
        },
        "pending_cancel": {
          "type": "boolean",
          "description": "Pending cancel state"
        },
        "period": {
          "type": "integer",
          "description": "Subscription period"
        },
        "period_start_time": {
          "type": "integer",
          "description": "Date of last period start in Unixtime"
        },
        "price": {
          "type": "integer",
          "description": "Subscription price"
        },
        "status": {
          "type": "string",
          "description": "Subscription status"
        },
        "test_mode": {
          "type": "boolean",
          "description": "Is test subscription"
        },
        "trial_expire_time": {
          "type": "integer",
          "description": "Date of trial expire in Unixtime"
        },
        "update_time": {
          "type": "integer",
          "description": "Date of last change in Unixtime"
        }
      },
      "required": [
        "id",
        "item_id",
        "status",
        "price",
        "period",
        "create_time",
        "update_time",
        "period_start_time"
      ],
      "additionalProperties": false
    },
    "pages_privacy_settings": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "community managers only",
        "community members only",
        "everyone"
      ]
    },
    "pages_wikipage": {
      "type": "object",
      "properties": {
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "creator_name": {
          "type": "integer",
          "description": "Page creator name"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1
        },
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        }
      },
      "required": [
        "id",
        "group_id",
        "title",
        "views",
        "who_can_view",
        "who_can_edit"
      ],
      "additionalProperties": false
    },
    "pages_wikipage_full": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "description": "Date when the page has been created in Unixtime"
        },
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "current_user_can_edit": {
          "description": "Information whether current user can edit the page",
          "$ref": "#/definitions/base_bool_int"
        },
        "current_user_can_edit_access": {
          "description": "Information whether current user can edit the page access settings",
          "$ref": "#/definitions/base_bool_int"
        },
        "edited": {
          "type": "integer",
          "description": "Date when the page has been edited in Unixtime"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1
        },
        "html": {
          "type": "string",
          "description": "Page content, HTML"
        },
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1
        },
        "source": {
          "type": "string",
          "description": "Page content, wiki"
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page preview"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "#/definitions/pages_privacy_settings"
        }
      },
      "required": [
        "id",
        "group_id",
        "title",
        "edited",
        "created",
        "views",
        "view_url",
        "who_can_view",
        "who_can_edit"
      ],
      "additionalProperties": false
    },
    "pages_wikipage_history": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Version ID",
          "minimum": 0
        },
        "length": {
          "type": "integer",
          "minimum": 0,
          "description": "Page size in bytes"
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when the page has been edited in Unixtime"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name"
        }
      },
      "required": [
        "id",
        "length",
        "date",
        "editor_id",
        "editor_name"
      ]
    },
    "photos_comment_xtr_pid": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "pid": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 1
        },
        "reply_to_comment": {
          "type": "integer",
          "description": "Replied comment ID"
        },
        "reply_to_user": {
          "type": "integer",
          "description": "Replied user ID"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "parents_stack": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "thread": {
          "$ref": "#/definitions/comment_thread"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text",
        "pid"
      ],
      "additionalProperties": false
    },
    "photos_image": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Height of the photo in px."
        },
        "type": {
          "$ref": "#/definitions/photos_image_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Photo URL."
        },
        "width": {
          "type": "integer",
          "description": "Width of the photo in px."
        }
      }
    },
    "photos_image_type": {
      "type": "string",
      "description": "Photo's type.",
      "enum": [
        "s",
        "m",
        "x",
        "o",
        "p",
        "q",
        "r",
        "y",
        "z",
        "w"
      ]
    },
    "photos_market_album_upload_response": {
      "type": "object",
      "properties": {
        "gid": {
          "type": "integer",
          "description": "Community ID"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        }
      },
      "withoutRefs": true
    },
    "photos_market_upload_response": {
      "type": "object",
      "properties": {
        "crop_data": {
          "type": "string",
          "description": "Crop data"
        },
        "crop_hash": {
          "type": "string",
          "description": "Crop hash"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        }
      },
      "withoutRefs": true
    },
    "photos_message_upload_response": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        }
      },
      "withoutRefs": true
    },
    "photos_owner_upload_response": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        }
      },
      "withoutRefs": true
    },
    "photos_photo": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_image"
          }
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_album": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "id": {
          "type": "integer",
          "description": "Photo album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0
        },
        "thumb": {
          "$ref": "#/definitions/photos_photo"
        },
        "title": {
          "type": "string",
          "description": "Photo album title"
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "created",
        "updated",
        "size"
      ],
      "additionalProperties": false
    },
    "photos_photo_album_full": {
      "type": "object",
      "properties": {
        "can_upload": {
          "description": "Information whether current user can upload photo to the album",
          "$ref": "#/definitions/base_bool_int"
        },
        "comments_disabled": {
          "description": "Information whether album comments are disabled",
          "$ref": "#/definitions/base_bool_int"
        },
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "id": {
          "type": "integer",
          "description": "Photo album ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "thumb_id": {
          "type": "integer",
          "description": "Thumb photo ID",
          "minimum": 0
        },
        "thumb_is_last": {
          "description": "Information whether the album thumb is last photo",
          "$ref": "#/definitions/base_bool_int"
        },
        "thumb_src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the thumb image"
        },
        "title": {
          "type": "string",
          "description": "Photo album title"
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0
        },
        "upload_by_admins_only": {
          "description": "Information whether only community administrators can upload photos",
          "$ref": "#/definitions/base_bool_int"
        }
      },
      "required": [
        "id",
        "owner_id",
        "title",
        "created",
        "updated",
        "size"
      ],
      "additionalProperties": false
    },
    "photos_photo_full": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "can_comment": {
          "description": "Information whether current user can comment the photo",
          "$ref": "#/definitions/base_bool_int"
        },
        "comments": {
          "$ref": "#/definitions/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_image"
          }
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "likes": {
          "$ref": "#/definitions/base_likes"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "reposts": {
          "$ref": "#/definitions/base_object_count"
        },
        "tags": {
          "$ref": "#/definitions/base_object_count"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_full_xtr_real_offset": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "can_comment": {
          "$ref": "#/definitions/base_bool_int"
        },
        "comments": {
          "$ref": "#/definitions/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "#/definitions/base_property_exists"
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "likes": {
          "$ref": "#/definitions/base_likes"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        },
        "reposts": {
          "$ref": "#/definitions/base_object_count"
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "tags": {
          "$ref": "#/definitions/base_object_count"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_sizes": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Height in px",
          "minimum": 0
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image"
        },
        "type": {
          "$ref": "#/definitions/photos_photo_sizes_type"
        },
        "width": {
          "type": "integer",
          "description": "Width in px",
          "minimum": 0
        }
      },
      "required": [
        "url",
        "width",
        "height",
        "type"
      ],
      "additionalProperties": false
    },
    "photos_photo_sizes_type": {
      "type": "string",
      "description": "Size type",
      "enum": [
        "s",
        "m",
        "x",
        "o",
        "p",
        "q",
        "r",
        "y",
        "z",
        "w"
      ]
    },
    "photos_photo_tag": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Tag ID"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "tagged_name": {
          "type": "string",
          "description": "Tag description"
        },
        "user_id": {
          "type": "integer",
          "description": "Tagged user ID"
        },
        "viewed": {
          "description": "Information whether the tag is reviewed",
          "$ref": "#/definitions/base_bool_int"
        },
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner"
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner"
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner"
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner"
        }
      },
      "required": [
        "user_id",
        "id",
        "tagged_name",
        "placer_id",
        "date",
        "x",
        "y",
        "x2",
        "y2",
        "viewed"
      ],
      "additionalProperties": false
    },
    "photos_photo_upload": {
      "type": "object",
      "properties": {
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "URL to upload photo"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "required": [
        "upload_url",
        "album_id",
        "user_id"
      ],
      "additionalProperties": false
    },
    "photos_photo_upload_response": {
      "type": "object",
      "properties": {
        "aid": {
          "type": "integer",
          "description": "Album ID"
        },
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "photos_list": {
          "type": "string",
          "description": "Uploaded photos data"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        }
      },
      "withoutRefs": true
    },
    "photos_photo_xtr_real_offset": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "#/definitions/base_property_exists"
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_photo_xtr_tag_info": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/photos_photo_sizes"
          }
        },
        "tag_created": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "tag_id": {
          "type": "integer",
          "description": "Tag ID"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "album_id",
        "owner_id",
        "date"
      ],
      "additionalProperties": false
    },
    "photos_wall_upload_response": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Uploading hash"
        },
        "photo": {
          "type": "string",
          "description": "Uploaded photo data"
        },
        "server": {
          "type": "integer",
          "description": "Upload server number"
        }
      },
      "withoutRefs": true
    },
    "polls_answer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Answer ID",
          "minimum": 0
        },
        "rate": {
          "type": "number",
          "description": "Answer rate in percents",
          "minimum": 0
        },
        "text": {
          "type": "string",
          "description": "Answer text"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "text",
        "votes",
        "rate"
      ],
      "additionalProperties": false
    },
    "polls_poll": {
      "type": "object",
      "properties": {
        "anonymous": {
          "description": "Information whether the field is anonymous",
          "type": "boolean"
        },
        "answer_id": {
          "type": "integer",
          "description": "Current user's answer ID",
          "minimum": 0
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/polls_answer"
          }
        },
        "created": {
          "type": "integer",
          "description": "Date when poll has been created in Unixtime",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Poll ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Poll owner's ID"
        },
        "question": {
          "type": "string",
          "description": "Poll question"
        },
        "votes": {
          "type": "string",
          "description": "Votes number",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "owner_id",
        "created",
        "question",
        "votes",
        "answer_id",
        "answers",
        "anonymous"
      ],
      "additionalProperties": false
    },
    "polls_voters": {
      "type": "object",
      "properties": {
        "answer_id": {
          "type": "integer",
          "description": "Answer ID"
        },
        "users": {
          "$ref": "#/definitions/polls_voters_users"
        }
      }
    },
    "polls_voters_users": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Votes number"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID"
          }
        }
      }
    },
    "prettyCards_prettyCard": {
      "type": "object",
      "properties": {
        "button": {
          "type": "string",
          "description": "Button key"
        },
        "button_text": {
          "type": "string",
          "description": "Button text in current language"
        },
        "card_id": {
          "type": "string",
          "description": "Card ID (long int returned as string)"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/base_image"
          }
        },
        "link_url": {
          "type": "string",
          "description": "Link URL"
        },
        "photo": {
          "type": "string",
          "description": "Photo ID (format \"<owner_id>_<media_id>\")"
        },
        "price": {
          "type": "string",
          "description": "Price if set (decimal number returned as string)"
        },
        "price_old": {
          "type": "string",
          "description": "Old price if set (decimal number returned as string)"
        },
        "title": {
          "type": "string",
          "description": "Title"
        }
      },
      "required": [
        "card_id",
        "link_url",
        "title",
        "photo"
      ]
    },
    "search_hint": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/apps_app"
        },
        "description": {
          "type": "string",
          "description": "Object description"
        },
        "global": {
          "description": "Information whether the object has been found globally",
          "$ref": "#/definitions/base_bool_int"
        },
        "group": {
          "$ref": "#/definitions/groups_group"
        },
        "profile": {
          "$ref": "#/definitions/users_user_min"
        },
        "section": {
          "$ref": "#/definitions/search_hint_section"
        },
        "type": {
          "$ref": "#/definitions/search_hint_type"
        }
      },
      "required": [
        "type",
        "section",
        "description"
      ]
    },
    "search_hint_section": {
      "type": "string",
      "description": "Section title",
      "enum": [
        "groups",
        "events",
        "publics",
        "correspondents",
        "people",
        "friends",
        "mutual_friends"
      ]
    },
    "search_hint_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "group",
        "profile",
        "vk_app"
      ]
    },
    "secure_level": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        }
      }
    },
    "secure_sms_notification": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string",
          "description": "Application ID"
        },
        "date": {
          "type": "string",
          "description": "Date when message has been sent in Unixtime"
        },
        "id": {
          "type": "string",
          "description": "Notification ID"
        },
        "message": {
          "type": "string",
          "description": "Messsage text"
        },
        "user_id": {
          "type": "string",
          "description": "User ID"
        }
      }
    },
    "secure_token_checked": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when access_token has been generated in Unixtime"
        },
        "expire": {
          "type": "integer",
          "description": "Date when access_token will expire in Unixtime"
        },
        "success": {
          "description": "Returns if successfully processed",
          "$ref": "#/definitions/base_ok_response"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID"
        }
      }
    },
    "secure_transaction": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Transaction date in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Transaction ID"
        },
        "uid_from": {
          "type": "integer",
          "description": "From ID"
        },
        "uid_to": {
          "type": "integer",
          "description": "To ID"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number"
        }
      }
    },
    "stats_activity": {
      "type": "object",
      "description": "Activity stats",
      "properties": {
        "comments": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "copies": {
          "type": "integer",
          "minimum": 0,
          "description": "Reposts number"
        },
        "hidden": {
          "type": "integer",
          "minimum": 0,
          "description": "Hidden from news count"
        },
        "likes": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "subscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "New subscribers count"
        },
        "unsubscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "Unsubscribed count"
        }
      }
    },
    "stats_city": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Visitors number",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "City name"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        }
      }
    },
    "stats_country": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Country code"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "name": {
          "type": "string",
          "description": "Country name"
        },
        "value": {
          "type": "integer",
          "description": "Country ID"
        }
      }
    },
    "stats_period": {
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "#/definitions/stats_activity"
        },
        "period_from": {
          "type": "integer",
          "description": "Unix timestamp"
        },
        "period_to": {
          "type": "integer",
          "description": "Unix timestamp"
        },
        "reach": {
          "$ref": "#/definitions/stats_reach"
        },
        "visitors": {
          "$ref": "#/definitions/stats_views"
        }
      }
    },
    "stats_reach": {
      "type": "object",
      "description": "Reach stats",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_country"
          }
        },
        "mobile_reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count from mobile devices"
        },
        "reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count"
        },
        "reach_subscribers": {
          "type": "integer",
          "minimum": 0,
          "description": "Subscribers reach count"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        }
      }
    },
    "stats_sex_age": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "value": {
          "type": "string",
          "description": "Sex/age value"
        }
      }
    },
    "stats_views": {
      "type": "object",
      "description": "Views stats",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_country"
          }
        },
        "mobile_views": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of views from mobile devices"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stats_sex_age"
          }
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number"
        },
        "visitors": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        }
      }
    },
    "stats_wallpost_stat": {
      "type": "object",
      "properties": {
        "hide": {
          "type": "integer",
          "description": "Hidings number"
        },
        "join_group": {
          "type": "integer",
          "description": "People have joined the group"
        },
        "links": {
          "type": "integer",
          "description": "Link clickthrough"
        },
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach"
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach"
        },
        "report": {
          "type": "integer",
          "description": "Reports number"
        },
        "to_group": {
          "type": "integer",
          "description": "Clickthrough to community"
        },
        "unsubscribe": {
          "type": "integer",
          "description": "Unsubscribed members"
        }
      }
    },
    "status_status": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/audio_audio"
        },
        "text": {
          "type": "string",
          "description": "Status text"
        }
      }
    },
    "storage_value": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "stories_promo_block": {
      "type": "object",
      "description": "Additional data for promo stories",
      "properties": {
        "name": {
          "type": "string",
          "description": "Promo story title"
        },
        "photo_50": {
          "type": "string",
          "description": "RL of square photo of the story with 50 pixels in width"
        },
        "photo_100": {
          "type": "string",
          "description": "RL of square photo of the story with 100 pixels in width"
        },
        "not_animated": {
          "type": "boolean",
          "description": "Hide animation for promo story"
        }
      }
    },
    "stories_replies": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Replies number.",
          "minimum": 0
        },
        "new": {
          "type": "integer",
          "description": "New replies number."
        }
      },
      "required": [
        "count"
      ]
    },
    "stories_story": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "can_comment": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can comment the story (0 - no, 1 - yes)."
        },
        "can_reply": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can reply to the story (0 - no, 1 - yes)."
        },
        "can_see": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can see the story (0 - no, 1 - yes)."
        },
        "can_share": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can share the story (0 - no, 1 - yes)."
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when story has been added in Unixtime."
        },
        "expires_at": {
          "type": "integer",
          "minimum": 0,
          "description": "Story expiration time. Unixtime."
        },
        "id": {
          "type": "integer",
          "description": "Story ID."
        },
        "is_deleted": {
          "type": "boolean",
          "description": "Information whether the story is deleted (false - no, true - yes)."
        },
        "is_expired": {
          "type": "boolean",
          "description": "Information whether the story is expired (false - no, true - yes)."
        },
        "link": {
          "$ref": "#/definitions/stories_story_link"
        },
        "owner_id": {
          "type": "integer",
          "description": "Story owner's ID."
        },
        "parent_story": {
          "$ref": "#/definitions/stories_story"
        },
        "parent_story_access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "parent_story_id": {
          "type": "integer",
          "description": "Parent story ID."
        },
        "parent_story_owner_id": {
          "type": "integer",
          "description": "Parent story owner's ID."
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "replies": {
          "description": "Replies to current story.",
          "$ref": "#/definitions/stories_replies"
        },
        "seen": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user has seen the story or not (0 - no, 1 - yes)."
        },
        "type": {
          "$ref": "#/definitions/stories_story_type"
        },
        "video": {
          "$ref": "#/definitions/stories_story_video"
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number."
        },
        "is_restricted": {
          "type": "boolean",
          "description": "Does author have stories privacy restrictions"
        },
        "no_sound": {
          "type": "boolean",
          "description": "Is video without sound"
        },
        "need_mute": {
          "type": "boolean",
          "description": "Does video need to be muted"
        },
        "can_ask": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether story has question sticker and current user can send question to the author"
        },
        "can_ask_anonymous": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether story has question sticker and current user can send anonymous question to the author"
        }
      },
      "required": [
        "id",
        "owner_id"
      ]
    },
    "stories_story_link": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Link text"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        }
      },
      "required": [
        "text",
        "url"
      ]
    },
    "stories_story_stats": {
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "bans": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "open_link": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "replies": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "shares": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "subscribers": {
          "$ref": "#/definitions/stories_story_stats_stat"
        },
        "views": {
          "$ref": "#/definitions/stories_story_stats_stat"
        }
      },
      "required": [
        "views",
        "replies",
        "answer",
        "shares",
        "subscribers",
        "bans",
        "open_link"
      ]
    },
    "stories_story_stats_stat": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Stat value",
          "minimum": 0
        },
        "state": {
          "$ref": "#/definitions/stories_story_stats_state"
        }
      },
      "required": [
        "state"
      ]
    },
    "stories_story_stats_state": {
      "type": "string",
      "description": "Statistic state",
      "enum": [
        "on",
        "off",
        "hidden"
      ]
    },
    "stories_story_type": {
      "type": "string",
      "description": "Story type.",
      "enum": [
        "photo",
        "video"
      ]
    },
    "stories_story_video": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/video_video"
        },
        {
          "properties": {
            "is_private": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether story is private (0 - no, 1 - yes)."
            }
          }
        }
      ]
    },
    "stories_upload_link_text": {
      "type": "string",
      "enum": [
        "to_store",
        "vote",
        "more",
        "book",
        "order",
        "enroll",
        "fill",
        "signup",
        "buy",
        "ticket",
        "write",
        "open",
        "learn_more",
        "view",
        "go_to",
        "contact",
        "watch",
        "play",
        "install",
        "read"
      ]
    },
    "users_career": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "company": {
          "type": "string",
          "description": "Company name"
        },
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID"
        },
        "id": {
          "type": "integer",
          "description": "Career ID"
        },
        "position": {
          "type": "string",
          "description": "Position"
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "additionalProperties": false
    },
    "users_crop_photo": {
      "type": "object",
      "properties": {
        "crop": {
          "$ref": "#/definitions/users_crop_photo_crop"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "rect": {
          "$ref": "#/definitions/users_crop_photo_rect"
        }
      }
    },
    "users_crop_photo_crop": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner"
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner"
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner"
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner"
        }
      },
      "additionalProperties": false
    },
    "users_crop_photo_rect": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner"
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner"
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner"
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner"
        }
      },
      "additionalProperties": false
    },
    "users_exports": {
      "type": "object",
      "properties": {
        "facebook": {
          "type": "integer"
        },
        "livejournal": {
          "type": "integer"
        },
        "twitter": {
          "type": "integer"
        }
      }
    },
    "users_fields": {
      "type": "string",
      "enum": [
        "photo_id",
        "verified",
        "sex",
        "bdate",
        "city",
        "country",
        "home_town",
        "has_photo",
        "photo_50",
        "photo_100",
        "photo_200_orig",
        "photo_200",
        "photo_400_orig",
        "photo_max",
        "photo_max_orig",
        "online",
        "lists",
        "domain",
        "has_mobile",
        "contacts",
        "site",
        "education",
        "universities",
        "schools",
        "status",
        "last_seen",
        "followers_count",
        "counters",
        "common_count",
        "occupation",
        "nickname",
        "relatives",
        "relation",
        "personal",
        "connections",
        "exports",
        "wall_comments",
        "activities",
        "interests",
        "music",
        "movies",
        "tv",
        "books",
        "games",
        "about",
        "quotes",
        "can_post",
        "can_see_all_posts",
        "can_see_audio",
        "can_write_private_message",
        "can_send_friend_request",
        "is_favorite",
        "is_hidden_from_feed",
        "timezone",
        "screen_name",
        "maiden_name",
        "crop_photo",
        "is_friend",
        "friend_status",
        "career",
        "military",
        "blacklisted",
        "blacklisted_by_me",
        "can_subscribe_posts",
        "descriptions",
        "trending",
        "mutual"
      ]
    },
    "users_last_seen": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "integer",
          "description": "Type of the platform that used for the last authorization"
        },
        "time": {
          "type": "integer",
          "description": "Last visit date (in Unix time)"
        }
      },
      "additionalProperties": false
    },
    "users_military": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "id": {
          "type": "integer",
          "description": "Military ID"
        },
        "unit": {
          "type": "string",
          "description": "Unit name"
        },
        "unit_id": {
          "type": "integer",
          "description": "Unit ID"
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "required": [
        "unit",
        "unit_id",
        "country_id"
      ],
      "additionalProperties": false
    },
    "users_occupation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of school, university, company group",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Name of occupation"
        },
        "type": {
          "type": "string",
          "description": "Type of occupation"
        }
      },
      "additionalProperties": false
    },
    "users_personal": {
      "type": "object",
      "properties": {
        "alcohol": {
          "type": "integer",
          "description": "User's views on alcohol"
        },
        "inspired_by": {
          "type": "string",
          "description": "User's inspired by"
        },
        "langs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "User's languages"
          }
        },
        "life_main": {
          "type": "integer",
          "description": "User's personal priority in life"
        },
        "people_main": {
          "type": "integer",
          "description": "User's personal priority in people"
        },
        "political": {
          "type": "integer",
          "description": "User's political views"
        },
        "religion": {
          "type": "string",
          "description": "User's religion"
        },
        "religion_id": {
          "type": "integer",
          "description": "User's religion id"
        },
        "smoking": {
          "type": "integer",
          "description": "User's views on smoking"
        }
      },
      "additionalProperties": false
    },
    "users_relative": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string",
          "description": "Date of child birthday (format dd.mm.yyyy)"
        },
        "id": {
          "type": "integer",
          "description": "Relative ID"
        },
        "name": {
          "type": "string",
          "description": "Name of relative"
        },
        "type": {
          "type": "string",
          "description": "Relative type",
          "enum": [
            "parent",
            "child",
            "grandparent",
            "grandchild",
            "sibling"
          ]
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "users_school": {
      "type": "object",
      "properties": {
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "class": {
          "type": "string",
          "description": "School class letter"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "id": {
          "type": "string",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School name"
        },
        "type": {
          "type": "integer",
          "description": "School type ID"
        },
        "type_str": {
          "type": "string",
          "description": "School type name"
        },
        "year_from": {
          "type": "integer",
          "description": "Year the user started to study"
        },
        "year_graduated": {
          "type": "integer",
          "description": "Graduation year"
        },
        "year_to": {
          "type": "integer",
          "description": "Year the user finished to study"
        }
      },
      "additionalProperties": false
    },
    "users_subscriptions_item": {
      "type": "object",
      "oneOf": [
        {
          "invalid_one_of": true,
          "$ref": "objects.json#/definitions/users_user_xtr_type"
        },
        {
          "invalid_one_of": true,
          "$ref": "objects.json#/definitions/groups_group_full"
        }
      ]
    },
    "users_university": {
      "type": "object",
      "properties": {
        "chair": {
          "type": "integer",
          "description": "Chair ID"
        },
        "chair_name": {
          "type": "string",
          "description": "Chair name"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "education_form": {
          "type": "string",
          "description": "Education form"
        },
        "education_status": {
          "type": "string",
          "description": "Education status"
        },
        "faculty": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "faculty_name": {
          "type": "string",
          "description": "Faculty name"
        },
        "graduation": {
          "type": "integer",
          "description": "Graduation year"
        },
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "name": {
          "type": "string",
          "description": "University name"
        }
      },
      "additionalProperties": false
    },
    "users_user": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_min"
        },
        {
          "properties": {
            "sex": {
              "$ref": "#/definitions/base_sex",
              "description": "User sex"
            },
            "screen_name": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "photo_50": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 50 pixels in width"
            },
            "photo_100": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 100 pixels in width"
            },
            "online": {
              "description": "Information whether the user is online",
              "$ref": "#/definitions/base_bool_int"
            },
            "online_mobile": {
              "description": "Information whether the user is online in mobile site or application",
              "$ref": "#/definitions/base_bool_int"
            },
            "online_app": {
              "type": "integer",
              "description": "Application ID"
            },
            "verified": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the user is verified"
            },
            "trending": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the user has a \"fire\" pictogram."
            },
            "friend_status": {
              "$ref": "#/definitions/friends_friend_status_status"
            },
            "mutual": {
              "$ref": "#/definitions/friends_requests_mutual"
            }
          }
        }
      ]
    },
    "users_user_connections": {
      "type": "object",
      "properties": {
        "skype": {
          "type": "string",
          "description": "User's Skype nickname"
        },
        "facebook": {
          "type": "string",
          "description": "User's Facebook account"
        },
        "facebook_name": {
          "type": "string",
          "description": "User's Facebook name"
        },
        "twitter": {
          "type": "string",
          "description": "User's Twitter account"
        },
        "livejournal": {
          "type": "string",
          "description": "User's Livejournal account"
        },
        "instagram": {
          "type": "string",
          "description": "User's Instagram account"
        }
      },
      "required": [
        "facebook",
        "instagram",
        "twitter",
        "skype"
      ]
    },
    "users_user_counters": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "integer",
          "description": "Albums number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "followers": {
          "type": "integer",
          "description": "Followers number"
        },
        "friends": {
          "type": "integer",
          "description": "Friends number"
        },
        "gifts": {
          "type": "integer",
          "description": "Gifts number"
        },
        "groups": {
          "type": "integer",
          "description": "Communities number"
        },
        "notes": {
          "type": "integer",
          "description": "Notes number"
        },
        "online_friends": {
          "type": "integer",
          "description": "Online friends number"
        },
        "pages": {
          "type": "integer",
          "description": "Public pages number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "subscriptions": {
          "type": "integer",
          "description": "Subscriptions number"
        },
        "user_photos": {
          "type": "integer",
          "description": "Number of photos with user"
        },
        "user_videos": {
          "type": "integer",
          "description": "Number of videos with user"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        }
      }
    },
    "users_user_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user"
        },
        {
          "properties": {
            "nickname": {
              "type": "string",
              "description": "User nickname"
            },
            "maiden_name": {
              "type": "string",
              "description": "User maiden name"
            },
            "domain": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "bdate": {
              "type": "string",
              "description": "User's date of birth"
            },
            "city": {
              "$ref": "#/definitions/base_object"
            },
            "country": {
              "$ref": "#/definitions/base_country"
            },
            "timezone": {
              "type": "integer",
              "description": "User's timezone"
            },
            "photo_200": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 200 pixels in width"
            },
            "photo_max": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with maximum width"
            },
            "photo_200_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo with 200 pixels in width"
            },
            "photo_400_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo with 400 pixels in width"
            },
            "photo_max_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo of maximum size"
            },
            "photo_id": {
              "type": "string",
              "description": "ID of the user's main photo"
            },
            "has_photo": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the user has main photo"
            },
            "has_mobile": {
              "description": "Information whether the user specified his phone number",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_friend": {
              "description": "Information whether the user is a friend of current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "wall_comments": {
              "description": "Information whether current user can comment wall posts",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_post": {
              "description": "Information whether current user can post on the user's wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see other users' audio on the wall",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_see_audio": {
              "description": "Information whether current user can see the user's audio",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_write_private_message": {
              "description": "Information whether current user can write private message",
              "$ref": "#/definitions/base_bool_int"
            },
            "can_send_friend_request": {
              "description": "Information whether current user can send a friend request",
              "$ref": "#/definitions/base_bool_int"
            },
            "mobile_phone": {
              "type": "string",
              "description": "Information whether current user can see"
            },
            "home_phone": {
              "type": "string",
              "description": "User's mobile phone number"
            },
            "site": {
              "type": "string",
              "description": "User's website"
            },
            "status_audio": {
              "$ref": "#/definitions/audio_audio"
            },
            "status": {
              "type": "string",
              "description": "User's status"
            },
            "activity": {
              "type": "string",
              "description": "User's status"
            },
            "last_seen": {
              "$ref": "#/definitions/users_last_seen"
            },
            "exports": {
              "$ref": "#/definitions/users_exports"
            },
            "crop_photo": {
              "$ref": "#/definitions/users_crop_photo"
            },
            "followers_count": {
              "type": "integer",
              "description": "Number of user's followers",
              "minimum": 0
            },
            "blacklisted": {
              "description": "Information whether current user is in the requested user's blacklist.",
              "$ref": "#/definitions/base_bool_int"
            },
            "blacklisted_by_me": {
              "description": "Information whether the requested user is in current user's blacklist",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_favorite": {
              "description": "Information whether the requested user is in faves of current user",
              "$ref": "#/definitions/base_bool_int"
            },
            "is_hidden_from_feed": {
              "description": "Information whether the requested user is hidden from current user's newsfeed",
              "$ref": "#/definitions/base_bool_int"
            },
            "common_count": {
              "type": "integer",
              "description": "Number of common friends with current user",
              "minimum": 0
            },
            "occupation": {
              "$ref": "#/definitions/users_occupation"
            },
            "career": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_career"
              }
            },
            "military": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_military"
              }
            },
            "university": {
              "type": "integer",
              "description": "University ID"
            },
            "university_name": {
              "type": "string",
              "description": "University name"
            },
            "faculty": {
              "type": "integer",
              "description": "Faculty ID"
            },
            "faculty_name": {
              "type": "string",
              "description": "Faculty name"
            },
            "graduation": {
              "type": "integer",
              "description": "Graduation year"
            },
            "education_form": {
              "type": "string",
              "description": "Education form"
            },
            "education_status": {
              "type": "string",
              "description": "User's education status"
            },
            "home_town": {
              "type": "string",
              "description": "User hometown"
            },
            "relation": {
              "$ref": "#/definitions/users_user_relation",
              "description": "User relationship status"
            },
            "relation_partner": {
              "$ref": "#/definitions/users_user_min"
            },
            "personal": {
              "$ref": "#/definitions/users_personal"
            },
            "universities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_university"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_school"
              }
            },
            "relatives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users_relative"
              }
            },
            "is_subscribed_podcasts": {
              "description": "Information whether current user is subscribed to podcasts",
              "type": "boolean"
            },
            "can_subscribe_podcasts": {
              "description": "Owner in whitelist or not",
              "type": "boolean"
            },
            "can_subscribe_posts": {
              "description": "Can subscribe to wall",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "users_user_min": {
      "type": "object",
      "properties": {
        "deactivated": {
          "type": "string",
          "description": "Returns if a profile is deleted or blocked"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "hidden": {
          "type": "integer",
          "description": "Returns if a profile is hidden."
        },
        "id": {
          "type": "integer",
          "description": "User ID"
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "can_access_closed": {
          "type": "boolean"
        },
        "is_closed": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "first_name",
        "last_name"
      ],
      "additionalProperties": false
    },
    "users_user_relation": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "enumNames": [
        "not specified",
        "single",
        "in a relationship",
        "engaged",
        "married",
        "complicated",
        "actively searching",
        "in love",
        "in a civil union"
      ]
    },
    "users_user_settings_xtr": {
      "type": "object",
      "properties": {
        "connections": {
          "$ref": "#/definitions/users_user_connections"
        },
        "bdate": {
          "type": "string",
          "description": "User's date of birth"
        },
        "bdate_visibility": {
          "type": "integer",
          "minimum": 0,
          "description": "Information whether user's birthdate are hidden"
        },
        "city": {
          "$ref": "#/definitions/base_city"
        },
        "country": {
          "$ref": "#/definitions/base_country"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "home_town": {
          "type": "string",
          "description": "User's hometown"
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "maiden_name": {
          "type": "string",
          "description": "User maiden name"
        },
        "name_request": {
          "$ref": "#/definitions/account_name_request"
        },
        "personal": {
          "$ref": "#/definitions/users_personal"
        },
        "phone": {
          "type": "string",
          "description": "User phone number with some hidden digits"
        },
        "relation": {
          "$ref": "#/definitions/users_user_relation",
          "description": "User relationship status"
        },
        "relation_partner": {
          "$ref": "#/definitions/users_user_min"
        },
        "relation_pending": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether relation status is pending"
        },
        "relation_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/users_user_min"
          }
        },
        "screen_name": {
          "type": "string",
          "description": "Domain name of the user's page"
        },
        "sex": {
          "$ref": "#/definitions/base_sex",
          "description": "User sex"
        },
        "status": {
          "type": "string",
          "description": "User status"
        },
        "status_audio": {
          "$ref": "#/definitions/audio_audio"
        },
        "interests": {
          "$ref": "objects.json#/definitions/account_user_settings_interests"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "home_town",
        "status"
      ]
    },
    "users_user_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "profile"
      ]
    },
    "users_user_xtr_counters": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user_full"
        },
        {
          "properties": {
            "counters": {
              "$ref": "#/definitions/users_user_counters"
            }
          }
        }
      ]
    },
    "users_user_xtr_type": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/users_user"
        },
        {
          "properties": {
            "type": {
              "$ref": "#/definitions/users_user_type"
            }
          }
        }
      ]
    },
    "users_users_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Users number",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID"
          }
        }
      },
      "required": [
        "count",
        "items"
      ],
      "additionalProperties": false
    },
    "utils_domain_resolved": {
      "type": "object",
      "properties": {
        "object_id": {
          "type": "integer",
          "description": "Object ID"
        },
        "type": {
          "$ref": "#/definitions/utils_domain_resolved_type"
        }
      }
    },
    "utils_domain_resolved_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "user",
        "group",
        "application",
        "page"
      ]
    },
    "utils_last_shortened_link": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "short_url": {
          "type": "string",
          "format": "uri",
          "description": "Short link URL"
        },
        "timestamp": {
          "type": "integer",
          "description": "Creation time in Unixtime"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Full URL"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      }
    },
    "utils_link_checked": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        },
        "status": {
          "$ref": "#/definitions/utils_link_checked_status"
        }
      }
    },
    "utils_link_checked_status": {
      "type": "string",
      "description": "Link status",
      "enum": [
        "not_banned",
        "banned",
        "processing"
      ]
    },
    "utils_link_stats": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats"
          }
        }
      }
    },
    "utils_link_stats_extended": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_extended"
          }
        }
      }
    },
    "utils_short_link": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc/)"
        },
        "short_url": {
          "type": "string",
          "format": "uri",
          "description": "Short link URL"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Full URL"
        }
      }
    },
    "utils_stats": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      }
    },
    "utils_stats_city": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      }
    },
    "utils_stats_country": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      }
    },
    "utils_stats_extended": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_country"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/utils_stats_sex_age"
          }
        },
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      }
    },
    "utils_stats_sex_age": {
      "type": "object",
      "properties": {
        "age_range": {
          "type": "string",
          "description": "Age denotation"
        },
        "female": {
          "type": "integer",
          "description": " Views by female users"
        },
        "male": {
          "type": "integer",
          "description": " Views by male users"
        }
      }
    },
    "video_save_result": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the video uploading"
        },
        "video_id": {
          "type": "integer",
          "description": "Video ID"
        }
      }
    },
    "video_video": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_comment": {
          "description": "Information whether current user can comment the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_like": {
          "description": "Information whether current user can like the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_repost": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can repost this video"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments"
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds"
        },
        "files": {
          "$ref": "#/definitions/video_video_files"
        },
        "first_frame": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video_image"
          }
        },
        "height": {
          "type": "integer",
          "minimum": 0,
          "description": "Video height"
        },
        "id": {
          "type": "integer",
          "description": "Video ID"
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video_image"
          }
        },
        "is_favorite": {
          "type": "boolean"
        },
        "live": {
          "description": "Returns if the video is a live stream",
          "$ref": "#/definitions/base_property_exists"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "player": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with a player that can be used to play the video in the browser."
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "#/definitions/base_property_exists"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "type": {
          "type": "string",
          "enum": [
            "video"
          ]
        },
        "views": {
          "type": "integer",
          "description": "Number of views"
        },
        "width": {
          "type": "integer",
          "minimum": 0,
          "description": "Video width"
        }
      },
      "additionalProperties": false
    },
    "video_video_album_full": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of videos in album"
        },
        "id": {
          "type": "integer",
          "description": "Album ID"
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video_image"
          },
          "description": "Album cover image in different sizes"
        },
        "is_system": {
          "type": "integer",
          "description": "Information whether album is system"
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID"
        },
        "title": {
          "type": "string",
          "description": "Album title"
        },
        "updated_time": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0
        }
      },
      "required": [
        "owner_id",
        "title",
        "updated_time",
        "count"
      ],
      "additionalProperties": false
    },
    "video_video_files": {
      "type": "object",
      "properties": {
        "external": {
          "type": "string",
          "format": "uri",
          "description": "URL of the external player"
        },
        "mp4_1080": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 1080p quality"
        },
        "mp4_240": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 240p quality"
        },
        "mp4_360": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 360p quality"
        },
        "mp4_480": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 480p quality"
        },
        "mp4_720": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 720p quality"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "video_video_full": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_add_to_faves": {
          "description": "Information whether current user can add the video to favourites",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_comment": {
          "description": "Information whether current user can comment the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "can_repost": {
          "description": "Information whether current user can comment the video",
          "$ref": "#/definitions/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments"
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds"
        },
        "files": {
          "$ref": "#/definitions/video_video_files"
        },
        "first_frame": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video_image"
          }
        },
        "first_frame_640": {
          "type": "string",
          "format": "uri",
          "description": "URL of the first frame for the corresponding width."
        },
        "first_frame_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of the first frame for the corresponding width."
        },
        "id": {
          "type": "integer",
          "description": "Video ID"
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_video_image"
          }
        },
        "likes": {
          "$ref": "#/definitions/base_likes"
        },
        "live": {
          "description": "Returns if the video is live translation",
          "$ref": "#/definitions/base_property_exists"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID"
        },
        "player": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with a player that can be used to play the video in the browser."
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "#/definitions/base_property_exists"
        },
        "repeat": {
          "description": "Information whether the video is repeated",
          "$ref": "#/definitions/base_bool_int"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "views": {
          "type": "integer",
          "description": "Number of views"
        }
      }
    },
    "video_video_image": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/base_image"
        },
        {
          "properties": {
            "with_padding": {
              "$ref": "#/definitions/base_bool_int"
            }
          }
        }
      ]
    },
    "wall_app_post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID"
        },
        "name": {
          "type": "string",
          "description": "Application name"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 604 px in width"
        }
      }
    },
    "wall_attached_note": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1
        },
        "read_comments": {
          "type": "integer",
          "description": "Read comments number",
          "minimum": 0
        },
        "title": {
          "type": "string",
          "description": "Note title"
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with note preview"
        }
      },
      "required": [
        "id",
        "owner_id",
        "comments",
        "read_comments",
        "date",
        "title",
        "view_url"
      ],
      "additionalProperties": false
    },
    "wall_comment_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/audio_audio"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "market": {
          "$ref": "#/definitions/market_market_item"
        },
        "market_market_album": {
          "$ref": "#/definitions/market_market_album"
        },
        "note": {
          "$ref": "#/definitions/wall_attached_note"
        },
        "page": {
          "$ref": "#/definitions/pages_wikipage_full"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "sticker": {
          "$ref": "#/definitions/base_sticker"
        },
        "type": {
          "$ref": "#/definitions/wall_comment_attachment_type"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "wall_comment_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "doc",
        "link",
        "note",
        "page",
        "market_market_album",
        "market",
        "sticker"
      ]
    },
    "wall_geo": {
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "string",
          "description": "Coordinates as string. <latitude> <longtitude>"
        },
        "place": {
          "$ref": "#/definitions/base_place"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      }
    },
    "wall_graffiti": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Graffiti ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner's ID"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_586": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 586 px in width"
        }
      }
    },
    "wall_post_source": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Additional data"
        },
        "platform": {
          "type": "string",
          "description": "Platform name"
        },
        "type": {
          "$ref": "#/definitions/wall_post_source_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to an external site used to publish the post"
        }
      }
    },
    "wall_post_source_type": {
      "type": "string",
      "description": "Type of post source",
      "enum": [
        "vk",
        "widget",
        "api",
        "rss",
        "sms"
      ]
    },
    "wall_post_type": {
      "type": "string",
      "description": "Post type",
      "enum": [
        "post",
        "copy",
        "reply",
        "postpone",
        "suggest"
      ]
    },
    "wall_posted_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 604 px in width"
        }
      }
    },
    "wall_views": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Count"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID"
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        },
        "reply_to_comment": {
          "type": "integer",
          "description": "Replied comment ID"
        },
        "reply_to_user": {
          "type": "integer",
          "description": "Replied user ID"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "thread": {
          "$ref": "#/definitions/comment_thread"
        },
        "post_id": {
          "type": "integer"
        },
        "owner_id": {
          "type": "integer"
        },
        "parents_stack": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "deleted": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "from_id",
        "date",
        "text"
      ],
      "additionalProperties": false
    },
    "wall_wallpost": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key to private object"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "edited": {
          "type": "integer",
          "minimum": 0,
          "description": "Date of editing in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID"
        },
        "geo": {
          "$ref": "#/definitions/wall_geo"
        },
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "is_archived": {
          "type": "boolean",
          "description": "Is post archived, only for post owners"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Information whether the post in favorites list"
        },
        "likes": {
          "description": "Count of likes",
          "$ref": "#/definitions/base_likes_info"
        },
        "owner_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "post_type": {
          "$ref": "#/definitions/wall_post_type"
        },
        "reposts": {
          "description": "Count of views",
          "$ref": "#/definitions/base_reposts_info"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "views": {
          "description": "Count of views",
          "$ref": "#/definitions/wall_views"
        }
      }
    },
    "wall_wallpost_attachment": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the audio"
        },
        "album": {
          "$ref": "#/definitions/photos_photo_album"
        },
        "app": {
          "$ref": "#/definitions/wall_app_post"
        },
        "audio": {
          "$ref": "#/definitions/audio_audio"
        },
        "doc": {
          "$ref": "#/definitions/docs_doc"
        },
        "event": {
          "$ref": "#/definitions/events_event_attach"
        },
        "graffiti": {
          "$ref": "#/definitions/wall_graffiti"
        },
        "link": {
          "$ref": "#/definitions/base_link"
        },
        "market": {
          "$ref": "#/definitions/market_market_item"
        },
        "market_album": {
          "$ref": "#/definitions/market_market_album"
        },
        "note": {
          "$ref": "#/definitions/wall_attached_note"
        },
        "page": {
          "$ref": "#/definitions/pages_wikipage_full"
        },
        "photo": {
          "$ref": "#/definitions/photos_photo"
        },
        "photos_list": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "String ID of photo"
          }
        },
        "poll": {
          "$ref": "#/definitions/polls_poll"
        },
        "posted_photo": {
          "$ref": "#/definitions/wall_posted_photo"
        },
        "type": {
          "$ref": "#/definitions/wall_wallpost_attachment_type"
        },
        "video": {
          "$ref": "#/definitions/video_video"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "wall_wallpost_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "posted_photo",
        "audio",
        "video",
        "doc",
        "link",
        "graffiti",
        "note",
        "app",
        "poll",
        "page",
        "album",
        "photos_list",
        "market_market_album",
        "market",
        "event"
      ]
    },
    "wall_wallpost_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/wall_wallpost"
        },
        {
          "properties": {
            "copy_history": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/wall_wallpost"
              }
            },
            "can_edit": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether current user can edit the post"
            },
            "created_by": {
              "type": "integer",
              "description": "Post creator ID (if post still can be edited)"
            },
            "can_delete": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether current user can delete the post"
            },
            "can_pin": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether current user can pin the post"
            },
            "is_pinned": {
              "type": "integer",
              "description": "Information whether the post is pinned"
            },
            "comments": {
              "$ref": "#/definitions/base_comments_info"
            },
            "marked_as_ads": {
              "$ref": "#/definitions/base_bool_int",
              "description": "Information whether the post is marked as ads"
            }
          }
        }
      ]
    },
    "wall_wallpost_to_id": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_wallpost_attachment"
          }
        },
        "comments": {
          "$ref": "#/definitions/base_comments_info"
        },
        "copy_owner_id": {
          "type": "integer",
          "description": "ID of the source post owner"
        },
        "copy_post_id": {
          "type": "integer",
          "description": "ID of the source post"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID"
        },
        "geo": {
          "$ref": "#/definitions/wall_geo"
        },
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "post_id": {
          "type": "integer",
          "description": "wall post ID (if comment)"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "post_type": {
          "$ref": "#/definitions/wall_post_type"
        },
        "reposts": {
          "$ref": "#/definitions/base_reposts_info"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        }
      }
    },
    "widgets_comment_media": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "integer",
          "description": "Media item ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Media owner's ID"
        },
        "thumb_src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image (type=photo only)"
        },
        "type": {
          "$ref": "#/definitions/widgets_comment_media_type"
        }
      }
    },
    "widgets_comment_media_type": {
      "type": "string",
      "description": "Media type",
      "enum": [
        "audio",
        "photo",
        "video"
      ]
    },
    "widgets_comment_replies": {
      "type": "object",
      "properties": {
        "can_post": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "replies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/widgets_comment_replies_item"
          }
        }
      }
    },
    "widgets_comment_replies_item": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "integer",
          "description": "Comment ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime"
        },
        "likes": {
          "$ref": "#/definitions/widgets_widget_likes"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "user": {
          "$ref": "#/definitions/users_user_full"
        }
      }
    },
    "widgets_widget_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wall_comment_attachment"
          }
        },
        "can_delete": {
          "$ref": "#/definitions/base_bool_int",
          "description": "Information whether current user can delete the comment"
        },
        "comments": {
          "$ref": "#/definitions/widgets_comment_replies"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Comment author ID"
        },
        "id": {
          "type": "integer",
          "description": "Comment ID"
        },
        "likes": {
          "$ref": "#/definitions/base_likes_info"
        },
        "media": {
          "$ref": "#/definitions/widgets_comment_media"
        },
        "post_source": {
          "$ref": "#/definitions/wall_post_source"
        },
        "post_type": {
          "type": "integer",
          "description": "Post type"
        },
        "reposts": {
          "$ref": "#/definitions/base_reposts_info"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner"
        },
        "user": {
          "$ref": "#/definitions/users_user_full"
        }
      },
      "required": [
        "id",
        "from_id",
        "to_id",
        "date",
        "post_type",
        "text"
      ],
      "additionalProperties": false
    },
    "widgets_widget_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        }
      }
    },
    "widgets_widget_page": {
      "type": "object",
      "properties": {
        "comments": {
          "$ref": "#/definitions/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when widgets on the page has been initialized firstly in Unixtime"
        },
        "description": {
          "type": "string",
          "description": "Page description"
        },
        "id": {
          "type": "integer",
          "description": "Page ID"
        },
        "likes": {
          "$ref": "#/definitions/base_object_count"
        },
        "page_id": {
          "type": "string",
          "description": "page_id parameter value"
        },
        "photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Page absolute URL"
        }
      }
    }
  }
}